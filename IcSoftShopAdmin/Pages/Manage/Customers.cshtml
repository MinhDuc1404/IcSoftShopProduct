@page
@model IcSoftShopAdmin.Pages.Manage.CustomersModel
@using System.Text.Json
@{
}
<style>
    .page-component {
        background-color: white; 
        border-radius: 20px; 
        margin-bottom: 20px; 
        padding: 15px; 
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); 
    }

    .modal .modal-content {
        border-radius: 10px;
    }

    .modal .modal-header {
        background-color: #0d6efd;
        color: white;
    }

    thead th {
        font-weight: bold;
    }
</style>

<div class="container">
<h2 class="my-4">Quản lý người dùng</h2>

    <div class="page-component">
        <table class="table table-striped table-bordered table-hover">
            <thead class="position-sticky top-0 text-black" style="background-color: #d8e2ef;">
                <tr>
                    <th colspan="8">
                        <button class="btn btn-success mt-2" style="background-color: #0d6efd" data-bs-toggle="modal" data-bs-target="#addCustomerModal">
                            Thêm mới ?
                        </button>
                    </th>
                </tr>
                <tr>
                    <th colspan="8">
                        <form method="get" class="d-flex" id="searchForm">
                            <input type="text" id="searchString" asp-for="SearchString" class="form-control" placeholder="Tìm kiếm khách hàng...">
                            <button type="submit" class="btn btn-primary ms-2" style="background-color: #0d6efd">
                                <i class="fas fa-search"></i>
                            </button>
                        </form>
                    </th>
                </tr>
                <tr>
                    <th>Tên người dùng</th>
                    <th>Họ tên</th>
                    <th>Số điện thoại</th>
                    <th>Địa chỉ</th>
                    <th>Ngày tạo</th>
                    <th>Đơn hàng</th>
                    <th>Vị trí</th>
                    <th>Hành động</th>
                </tr>
            </thead>
            <tbody id="customerTableBody">
                @if (Model.ShopUsers != null && Model.ShopUsers.Count > 0)
                {
                    @foreach (var item in Model.ShopUsers)
                    {
                        <tr >
                            <td class="clickable-row" data-id="@item.Id" data-bs-toggle="modal" data-bs-target="#ordersModal" style="cursor: pointer">@item.UserName</td>
                            <td class="clickable-row" data-id="@item.Id" data-bs-toggle="modal" data-bs-target="#ordersModal" style="cursor: pointer">@item.FirstName @item.LastName</td>
                            <td class="clickable-row" data-id="@item.Id" data-bs-toggle="modal" data-bs-target="#ordersModal" style="cursor: pointer">@item.PhoneNumber</td>
                            <td class="clickable-row" data-id="@item.Id" data-bs-toggle="modal" data-bs-target="#ordersModal" style="cursor: pointer">@item.Address</td>
                            <td class="clickable-row" data-id="@item.Id" data-bs-toggle="modal" data-bs-target="#ordersModal" style="cursor: pointer">@item.CreatedDate.ToString("yyyy-MM-dd")</td>
                            <td>
                                @(Model.OrderCountsByUser.ContainsKey(item.Id) ? Model.OrderCountsByUser[item.Id] : 0)
                            </td>
                            <td>
                                <form method="post" asp-page-handler="ChangeRole">
                                    <input type="hidden" name="userId" value="@item.Id" />
                                    <select name="selectedRole" data-user-id="@item.Id" class="form-control role-dropdown">
                                        <option>
                                            @(Model.UserRoles.ContainsKey(item.Id) ?
                                                string.Join(", ", Model.UserRoles[item.Id]) : "Chưa có vai trò")
                                        </option>
                                        @foreach (var role in Model.AvailableRoles)
                                        {
                                            <option value="@role">@role</option>
                                        }
                                    </select>
                                </form>
                            </td>

                            <td>
                                <div class="d-flex align-items-center">
                               
                                    <button type="button" class="btn btn-sm btn-info d-inline-flex align-items-center me-2"
                                            style="background-color: #0dcaf0"
                                            data-bs-toggle="modal" data-bs-target="#editCustomerModal"
                                            data-id="@item.Id"
                                            data-firstname="@item.FirstName"
                                            data-lastname="@item.LastName"
                                            data-email="@item.Email"
                                            data-address="@item.Address"
                                            data-phone="@item.PhoneNumber">
                                        <i class="fas fa-edit"></i>
                                    </button>
                                   
                                    <form method="post" asp-page-handler="Delete" style="display:inline-block;">
                                        <input type="hidden" name="Id" value="@item.Id" />
                                        <button type="submit" class="btn btn-sm btn-danger d-inline-flex align-items-center" style="background-color: red">
                                            <i class="fas fa-trash-alt"></i>
                                        </button>
                                    </form>
                                </div>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="7" class="text-center">Không tìm thấy người dùng</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div class="row">
        <ul class="pagination justify-content-center" id="pagination">
            <li class="page-item @(Model.PageNumber == 1 ? "disabled" : "")">
                <a class="page-link" href="#" data-page="@(Model.PageNumber - 1)" aria-label="Trước">
                    <span aria-hidden="true">&laquo;</span>
                </a>
            </li>
            @for (var i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(Model.PageNumber == i ? "active" : "")">
                    <a class="page-link" href="#" data-page="@i">@i</a>
                </li>
            }
            <li class="page-item @(Model.PageNumber == Model.TotalPages ? "disabled" : "")">
                <a class="page-link" href="" data-page="@(Model.PageNumber + 1)" aria-label="Tiếp">
                    <span aria-hidden="true">&raquo;</span>
                </a>
            </li>
        </ul>

    </div>
    <div class="modal fade" id="editCustomerModal" tabindex="-1" aria-labelledby="editCustomerModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editCustomerModalLabel">Chỉnh sửa khách hàng</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">    
                    <form method="post" asp-page-handler="Edit">
                        <div class="form-group">
                            <label for="EditCustomer_FirstName">Họ</label>
                            <input type="text" id="EditCustomer_FirstName" name="FirstName" class="form-control" required />
                        </div>
                        <div class="form-group">
                            <label for="EditCustomer_LastName">Tên</label>
                            <input type="text" id="EditCustomer_LastName" name="LastName" class="form-control" required />
                        </div>
                        <div class="form-group">
                            <label for="EditCustomer_Email">Email</label>
                            <input type="email" id="EditCustomer_Email" name="Email" class="form-control" required />
                        </div>
                        <div class="form-group">
                            <label for="EditCustomer_Address">Địa chỉ</label>
                            <input type="text" id="EditCustomer_Address" name="Address" class="form-control" required />
                        </div>
                        <div class="form-group">
                            <label for="EditCustomer_PhoneNumber">Số điện thoại</label>
                            <input type="text" id="EditCustomer_PhoneNumber" name="PhoneNumber" class="form-control" required />
                        </div>
                        <input type="hidden" id="EditCustomer_Id" name="Id" />
                        <button type="submit" class="btn btn-primary mt-2">Cập nhật</button>
                    </form>
                </div>
            </div>
        </div>
    </div>


    <div class="modal fade" id="ordersModal" tabindex="-1" aria-labelledby="ordersModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content" style="height: calc(100vh - 10rem);">
                <div class="modal-header position-sticky top-0 mb-0" style="z-index: 1050; padding-bottom: 0; background-color: white">
                    <h5 class="modal-title" id="ordersModalLabel">Đơn hàng</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body" style="overflow-y: auto; max-height: calc(100vh - 15rem); padding-top: 0;">
                    <table class="table table-striped table-bordered" id="ordersTable">
                        <thead class="position-sticky top-0 text-black" style="background-color: #d8e2ef; z-index: 1040;">
                            <tr>
                                <th colspan="8">
                                    <form id="orderSearchForm" class="d-flex">
                                        <input type="text" id="orderSearchInput" class="form-control" placeholder="Tìm kiếm đơn hàng...">
                                        <button type="submit" class="btn btn-primary ms-2" style="background-color: #0d6efd">
                                            <i class="fas fa-search"></i>
                                        </button>
                                    </form>
                                </th>
                            </tr>
                            <tr>
                                <th>Mã đơn hàng</th>
                                <th>Ngày tạo</th>
                                <th>Số tiền</th>
                                <th>Địa chỉ giao hàng</th>
                                <th>Trạng thái</th>
                            </tr>
                        </thead>
                        <tbody id="ordersBody"></tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="addCustomerModal" tabindex="-1" aria-labelledby="addCustomerModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="addCustomerModalLabel">Thêm tài khoản</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="addCustomerForm" method="post" asp-page-handler="Add">
                        <div asp-validation-summary="ModelOnly" class="text-danger" role="alert"></div>
                        <div class="form-group mb-2">
                            <label asp-for="Input.Email" class="form-label">Email</label>
                            <input asp-for="Input.Email" class="form-control" autocomplete="username" aria-required="true" />
                            <span asp-validation-for="Input.Email" class="text-danger"></span>
                        </div>
                        <div class="row mb-2">
                         <div class="col-6">
                            <label asp-for="Input.Password" class="form-label">Mật khẩu</label>
                                <input asp-for="Input.Password" class="form-control" autocomplete="new-password" aria-required="true" />
                            <span asp-validation-for="Input.Password" class="text-danger"></span>
                        </div>
                        <div class="col-6">
                            <label asp-for="Input.ConfirmPassword" class="form-label">Xác nhận lại mật khẩu</label>
                                <input asp-for="Input.ConfirmPassword" class="form-control" autocomplete="new-password" aria-required="true" />
                            <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
                        </div>
                       </div>
                       <div class="row mb-2">
                       <div class="col-6">
                                <label asp-for="Input.FirstName" class="form-label">Họ</label>
                                <input asp-for="Input.FirstName" class="form-control" />
                                <span asp-validation-for="Input.FirstName" class="text-danger"></span>
                        </div>
                        <div class="col-6">
                                <label asp-for="Input.LastName" class="form-label">Tên</label>
                                <input asp-for="Input.LastName" class="form-control" />
                                <span asp-validation-for="Input.LastName" class="text-danger"></span>
                        </div>
                       </div>
                      <div class="row mb-2">
                        <div class="col-6">
                                <label asp-for="Input.Phone" class="form-label">Số điện thoại</label>
                                <input asp-for="Input.Phone" class="form-control" />
                                <span asp-validation-for="Input.Phone" class="text-danger"></span>
                        </div>
                        <div class="col-6">
                            <label asp-for="Input.Address" class="form-label">Địa chỉ (tuỳ chọn)</label>
                            <input asp-for="Input.Address" class="form-control" />
                            <span asp-validation-for="Input.Address" class="text-danger"></span>
                        </div>
                      </div>
                        <div class="form-group">
                            <label for="roles" class="form-label">Chọn vai trò</label>
                            <select id="roles" class="form-control" asp-for="SelectedRole" name="SelectedRole">
                                <option value="">Chọn vai trò</option>
                                @foreach (var role in Model.AvailableRoles)
                                {
                                    <option value="@role">@role</option>
                                }
                            </select>
                            <span asp-validation-for="SelectedRole" class="text-danger"></span>
                        </div>


                        <button type="submit" class="btn btn-success mt-2" style="background-color: #0d6efd">Thêm</button>
                    </form>
                </div>
            </div>
        </div>
    </div>




    @section Scripts {
        <partial name="_ValidationScriptsPartial" />
        <script>

            $(document).on('change', '.role-dropdown', function (e) {
                e.preventDefault();
                var selectedRole = $(this).val();  
                var userId = $(this).data('user-id');  
                $.ajax({
                    url: '/Manage/Customers?handler=ChangeRole',
                    type: 'GET',
                    data: {
                        userId: userId,
                        selectedRole: selectedRole
                    },
                    success: function (response) {

                        if (response.success) {
                            roleDropdown.empty();
                            roleDropdown.append(`<option value="${selectedRole}" selected>${selectedRole}</option>`);


                        } else {
                            alert("Cập nhật trạng thái thất bại: " + response.message);
                        }
                    },
                    error: function (e) {
                        console.log(e);
                   
                    }
                });
            });
         
            function fetchCustomers(searchString, page = 1) {
                $.ajax({
                    url: '/Manage/Customers',
                    method: 'GET',
                    data: { searchString: searchString, pageNumber: page },
                    success: function (data) {
                        $('#customerTableBody').html($(data).find('#customerTableBody').html());
                        $('#pagination').html($(data).find('#pagination').html());
                    },
                    error: function () {
                        alert('Có lỗi xảy ra khi tìm kiếm khách hàng.');
                    }
                });
            }

            $('#searchForm').on('submit', function (e) {
                e.preventDefault(); 
                var searchString = $('#searchString').val().trim();
                fetchCustomers(searchString); 
            });

            var editCustomerModal = document.getElementById('editCustomerModal');
            editCustomerModal.addEventListener('show.bs.modal', function (event) {
                var button = event.relatedTarget;
                var customerId = button.getAttribute('data-id');
                var customerFirstName = button.getAttribute('data-firstname');
                var customerLastName = button.getAttribute('data-lastname');
                var customerEmail = button.getAttribute('data-email');
                var customerAddress = button.getAttribute('data-address');
                var customerPhone = button.getAttribute('data-phone');

                document.getElementById('EditCustomer_Id').value = customerId;
                document.getElementById('EditCustomer_FirstName').value = customerFirstName;
                document.getElementById('EditCustomer_LastName').value = customerLastName;
                document.getElementById('EditCustomer_Email').value = customerEmail;
                document.getElementById('EditCustomer_Address').value = customerAddress;
                document.getElementById('EditCustomer_PhoneNumber').value = customerPhone;
            });


            var ordersModal = document.getElementById('ordersModal');
            var ordersBody = document.getElementById('ordersBody');
            var orderSearchInput = document.getElementById('orderSearchInput');
            var orderSearchForm = document.getElementById('orderSearchForm');
            var currentCustomerId = null;

         
            ordersModal.addEventListener('show.bs.modal', function (event) {
                var triggerRow = event.relatedTarget;
                currentCustomerId = triggerRow.getAttribute('data-id');

               
                fetchOrders(currentCustomerId, "");
            });


            function fetchOrders(customerId, searchQuery) {
                fetch(`/Manage/Customers?handler=GetOrders&id=${customerId}&searchStringOrder=${encodeURIComponent(searchQuery)}`)
                    .then(response => response.json())
                    .then(data => {
                        ordersBody.innerHTML = '';

                        if (data.length == 0) {
                            ordersBody.innerHTML = '<tr><td colspan="5" class="text-center">Không có đơn hàng nào.</td></tr>';
                        } else {
                            data.forEach(order => {
                                let statusClass = '';
                                let statusText = '';

                                switch (order.status) {
                                    case 'Completed':
                                        statusClass = 'text-primary';
                                        statusText = 'Đã hoàn thành';
                                        break;
                                    case 'Active':
                                        statusClass = 'text-success';
                                        statusText = 'Đang hoạt động';
                                        break;
                                    case 'Cancelled':
                                        statusClass = 'text-danger';
                                        statusText = 'Đã hủy';
                                        break;
                                    case 'Shipping':
                                        statusClass = 'text-dark';
                                        statusText = 'Đang giao';
                                        break;
                                    default:
                                        statusText = 'Đang chờ xử lý';  
                                        break;
                                }

                                ordersBody.innerHTML += `
                                    <tr>
                                        <td>${order.id}</td>
                                        <td>${new Date(order.createdAt).toLocaleDateString()}</td>
                                        <td>${order.totalAmount}</td>
                                        <td>${order.shippingAddress}</td>
                                        <td class="${statusClass}">${statusText}</td>
                                    </tr>`;
                            });
                        }
                    });
            }


            
            orderSearchForm.addEventListener('submit', function (event) {
                event.preventDefault(); 
                var searchQuery = orderSearchInput.value.trim();

                if (currentCustomerId) {
                    fetchOrders(currentCustomerId, searchQuery);
                }
            });


            $(document).on('click', '#pagination a', function (e) {
                e.preventDefault();

                var page = $(this).data('page');
                var searchString = $('#searchString').val();

                if (page > 0) {
                    $.ajax({
                        url: '/Manage/Customers',
                        method: 'GET',
                        data: { pageNumber: page, searchString: searchString },
                        success: function (data) {
                          
                            $('#customerTableBody').html($(data).find('#customerTableBody').html());
                            $('#pagination').html($(data).find('#pagination').html());
                        },
                        error: function () {
                            alert('Có lỗi xảy ra khi phân trang.');
                        }
                    });
                }
            });

        

        </script>
    }
