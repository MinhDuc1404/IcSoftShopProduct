@page
@model IndexModel
@using System.Text.Json
@{
    ViewData["Title"] = "Home page";
}
<style>

    .chart-container {
        position: relative;
        width: 100%;
        background-color: white;
        border-radius: 20px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }


    canvas {
        width: 100% !important;
        height: 400px !important;
    }

    .page-component {
        background-color: white;
        border-radius: 20px;
        margin-bottom: 20px;
        padding: 15px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    table {
        border-radius: 20px;
    }

    .breadcrumb-item + .breadcrumb-item::before {
        content: ">";
    }

    .breadcrumb-item i {
        color: #007bff;
        font-size: 1.2rem;
    }
</style>

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item d-flex align-items-center"><i class="bi bi-house"></i><a href="#">Home</a></li>
        <li class="breadcrumb-item active d-flex align-items-center" aria-current="page">Sales</li>
    </ol>
</nav>
<div class="page-component">
    <div class="row text-center">
        <div class="col-lg-3 col-md-6 mb-4">
            <div class="card border-success bg-success text-dark">
                <div class="card-body">
                    <p class="card-text">Tổng doanh thu</p>
                    <h5 class="card-title">@Model.TotalSales.ToString("N2")<span> VND</span></h5>
                    <i class="fas fa-money-bill-alt fa-2x"></i>
                </div>
            </div>
        </div>

        <div class="col-lg-3 col-md-6 mb-4">
            <div class="card border-primary bg-primary text-dark">
                <div class="card-body">
                    <p class="card-text">Tổng đơn hàng</p>
                    <h5 class="card-title">@Model.TotalOrders</h5>
                    <i class="fas fa-shopping-cart fa-2x"></i>
                </div>
            </div>
        </div>

        <div class="col-lg-3 col-md-6 mb-4">
            <div class="card border-danger bg-danger text-dark">
                <div class="card-body">
                    <p class="card-text">Tổng khách hàng</p>
                    <h5 class="card-title">@Model.ShopUsers.Count</h5>
                    <i class="fas fa-user fa-2x"></i>
                </div>
            </div>
        </div>

        <div class="col-lg-3 col-md-6 mb-4">
            <div class="card border-warning bg-warning text-dark">
                <div class="card-body">
                    <p class="card-text">Số người online</p>
                    <h5 class="card-title">0</h5>
                    <i class="fas fa-users fa-2x"></i>
                </div>
            </div>
        </div>

    </div>
</div>

<div class="row align-items-center my-4">

    <div class="row">
    
        <div class="col-lg-9 col-md-12 mb-4">
            <div class="chart-container p-4">
                <div class="row">
                    <div class="col-auto">
                        <i class="fas fa-chart-bar fa-lg text-muted"></i>
                        <span class="ml-2  fw-bold">Phân tích</span>
                    </div>
                    <div class="col-auto">
                        <div id="reportrange" style="background: #fff; cursor: pointer; padding: 5px 10px;">
                            <i class="fa fa-calendar"></i>&nbsp;
                            <span></span> <i class="fa fa-caret-down"></i>
                        </div>
                    </div>
                </div>
                <canvas id="orderChart"></canvas>
            </div>
        </div>


        <div class="col-lg-3 col-md-12 mb-4 p-3" style="background-color: white; border-radius: 20px">
            <div>
                <span class="ml-2  fw-bold">Doanh thu theo tháng</span>
                <canvas id="myChart"></canvas>
            </div>
            <div class="difference"></div>
        </div>
    </div>

</div>

<div class="row align-items-center my-4">

    <div class="row">
  
        <div class="col-lg-7 col-md-12 mb-4">
           
            <div class="chart-container p-3">
                <div class="ml-2 fw-bold">Sản phẩm bán chạy</div>
                <div class="btn-group my-2" role="group">
                    <button type="button" class="btn btn-primary period-btn" data-period="daily">Daily</button>
                    <button type="button" class="btn btn-primary period-btn" data-period="monthly">Monthly</button>
                    <button type="button" class="btn btn-primary period-btn" data-period="yearly">Yearly</button>
                </div>
                <div id="best-selling-items" class="bestSellingItem row my-3">
                  
                </div>


            </div>
        </div>


        <div class="col-lg-5 col-md-12 mb-4 p-3" style="background-color: white; border-radius: 20px">
            <div>
                <span class="ml-2 fw-bold my-4">Giao dịch</span>

                <canvas id="transChart"></canvas>
            </div>
         
        </div>
    </div>
</div>

<div class="modal fade" id="orderDetailsModal" tabindex="-1" aria-labelledby="orderDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="model-header d-flex justify-content-between align-item-center p-3">
                <h4 class="modal-title" id="orderDetailsModalLabel">Chi tiết đơn hàng</h4>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Đóng"></button>
            </div>
            <div class="modal-body">
                <h5>Thông tin khách hàng</h5>
                <p><strong>Tên:</strong> <span id="customerName"></span></p>
                <p><strong>Email:</strong> <span id="customerEmail"></span></p>
                <p><strong>Số điện thoại:</strong> <span id="customerPhone"></span></p>
                <p><strong>Địa chỉ nhận hàng:</strong> <span id="customerAddress"></span></p>
                <hr></hr>
                <h5>Sản phẩm đặt hàng</h5>
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Sản phẩm</th>
                            <th>Số lượng</th>
                            <th>Giá</th>
                            <th>Màu sắc</th>
                            <th>Kích cỡ</th>
                        </tr>
                    </thead>
                    <tbody id="orderItemsBody">
                    </tbody>

                </table>
                <div>
                    <span><strong>Mã giảm:</strong> </span>
                    <span id="coupon"></span>
                    <span id="discount"></span>
                </div>
                <div>
                    <span><strong>Tổng cộng:</strong> </span>
                    <span id="totalAmount"></span>
                </div>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
            </div>
        </div>
    </div>
</div>

<div class="page-component">
    <div class="mt-4 table-responsive" style="height: calc(100vh - 14rem)">
        <table class="table table-striped table-bordered table-hover rounded">
            <thead class="position-sticky top-0 text-black" style="background-color: #d8e2ef;">

                <tr>
                    <th colspan="8">
                        <form method="get" id="searchForm" class="d-flex justify-content-between align-items-center">
                            <h3 class="text-black mt-4">Đơn hàng</h3>
                            <div class="d-flex">
                                <input type="text" id="searchString" asp-for="SearchString" class="form-control" placeholder="Tìm kiếm đơn hàng...">
                                <button type="submit" id="searchButton" class="btn-primary ms-2" style="background-color:#0d6efd; padding: 5px 10px">
                                    <i class="fas fa-search"></i>
                                </button>
                            </div>
                        </form>
                    </th>
                </tr>

                <tr>
                    <th>#/@Model.TotalOrders</th>
                    <th>Mã Khách Hàng</th>
                    <th>Giá Tiền</th>
                    <th>Địa chỉ nhận hàng</th>
                    <th>Thanh Toán</th>
                    <th>Ngày</th>
                    <th>Trạng Thái</th>
                    <th></th>
                </tr>
            </thead>
            <tbody id="orderTableBody">
                @foreach (var order in Model.Orders)
                {
                    <tr style="cursor: pointer" data-id="@order.Id">
                        <td>@order.Id</td>
                        <td>@order.UserId</td>
                        <td>@order.TotalAmount</td>
                        <td>@order.ShippingAddress</td>
                        <td>@order.PaymentMethod</td>
                        <td>@order.CreatedAt</td>
                        <td>
                            <form method="post" asp-page-handler="UpdateStatus" style="display:inline-block;">
                                <input type="hidden" name="Id" value="@order.Id" />
                                <select name="status" data-order-id="@order.Id" class="form-control status-dropdown"
                                        style="color: @(order.status == "Pending" ? "black" :
                                    (order.status == "Active" ? "green" : (order.status == "Completed" ? "blue" :
                                    (order.status == "Shipping" ? "black" : "red"))));">
                                    <option>
                                        @(order.status == "Active" ? "Đang hoạt động" :
                                            (order.status == "Completed" ? "Hoàn thành" :
                                            (order.status == "Cancelled" ? "Đã hủy" :
                                            (order.status == "Shipping" ? "Đang giao" :
                                            order.status == "Pending..." ? "Đang chờ duyệt" : order.status))))
                                    </option>
                                    <option value="Active" style="color: green">Đang hoạt động</option>
                                    <option value="Completed" style="color: blue">Hoàn thành</option>
                                    <option value="Cancelled" style="color: red">Đã hủy</option>
                                    <option value="Shipping" style="color: black">Đang giao</option>
                                </select>
                            </form>
                        </td>
                        <td>
                            <form method="post" asp-page-handler="Delete" style="display:inline-block;">
                                <input type="hidden" name="Id" value="@order.Id" />
                                <button type="submit" class="btn btn-danger" style="background-color: red">
                                    <i class="fas fa-trash-alt"></i>
                                </button>
                            </form>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

</div>
<div class="row">
    <div class="col-md-12">
        <nav aria-label="Order pagination">
            <ul class="pagination justify-content-center">
                <li class="page-item @(Model.PageNumber == 1 ? "disabled" : "")">
                    <a class="page-link" href="#" data-page="@(Model.PageNumber - 1)" aria-label="Trước">
                        <span aria-hidden="true">&laquo;</span>
                    </a>
                </li>
                @for (var i = 1; i <= Model.TotalPages; i++)
                {
                    <li class="page-item @(Model.PageNumber == i ? "active" : "")">
                        <a class="page-link" href="#" data-page="@i">@i</a>
                    </li>
                }
                <li class="page-item @(Model.PageNumber == Model.TotalPages ? "disabled" : "")">
                    <a class="page-link" href="#" data-page="@(Model.PageNumber + 1)" aria-label="Tiếp">
                        <span aria-hidden="true">&raquo;</span>
                    </a>
                </li>
            </ul>

        </nav>
    </div>
</div>


@section Scripts {
    <script type="text/javascript" src="https://cdn.jsdelivr.net/jquery/latest/jquery.min.js"></script>
    <script type="text/javascript" src="https://cdn.jsdelivr.net/momentjs/latest/moment.min.js"></script>
    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.min.js"></script>
    <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.css" />
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <script type="text/javascript">
        const ctx = document.getElementById('myChart');
        const difference = document.getElementsByClassName('difference')
        $(document).ready(function () {
            $.ajax({
                url: '@Url.Page("Index", "MonthlySale")',
                method: 'GET',
                data: {},
                success: function (response) {
                    if (response && response.sales) {
                        console.log(response);
                        const salesData = response.sales;
                        const labels = salesData.map(s => s.date);
                        const data = salesData.map(s => s.totalSales);

                        new Chart(ctx, {
                            type: 'bar',
                            data: {
                                labels: labels,
                                datasets: [{
                                    label: 'VND',
                                    data: data,
                                    borderWidth: 1
                                }]
                            },
                            options: {
                                responsive: true,
                                maintainAspectRatio: false,
                                scales: {
                                    y: {
                                        beginAtZero: true
                                    }
                                }
                            }
                        });

                    }
                },
                error: function () {
                    alert('Failed to retrieve chart data.');
                }
            });
        });

        const ctx2 = document.getElementById('transChart');
        $(document).ready(function () {
            $.ajax({
                url: '@Url.Page("Index", "Transaction")', // Ensure the URL is correct for your endpoint
                method: 'GET',
                data: {},
                success: function (response) {
                    if (response && response.salesByTransactionType) {

                        const transactionData = response.salesByTransactionType;

                        // Extract labels (PaymentMethod) and data (TotalSales) from the response
                        const labels = transactionData.map(item => item.paymentMethod);
                        const data = transactionData.map(item => item.totalSales);
                        console.log(transactionData)
                        new Chart(ctx2, {
                            type: 'pie',
                            data: {
                                labels: labels, // Array of payment methods (e.g., ["COD", "Transfer"])
                                datasets: [{
                                    label: 'Total Sales by Transaction Type',
                                    data: data,   // Array of sales amounts (e.g., [5000, 8000])
                                    backgroundColor: ['#FF6384', '#36A2EB'], // Add as many colors as needed
                                    borderWidth: 1
                                }]
                            },
                            options: {
                                responsive: true,
                                plugins: {
                                    legend: {
                                        position: 'top',
                                    },
                                    tooltip: {
                                        callbacks: {
                                            label: function (context) {
                                                return context.label + ': $' + context.raw.toFixed(2);
                                            }
                                        }
                                    }
                                }
                            }
                        });
                    }
                },
                error: function () {
                    alert('Failed to retrieve chart data.');
                }
            });
        });

      
        $(function () {
            var start = moment().subtract(29, 'days');
            var end = moment();

            function cb(start, end) {
                $('#reportrange span').html(start.format('MMMM D, YYYY') + ' - ' + end.format('MMMM D, YYYY'));


                updateChart(start.format('YYYY-MM-DD'), end.format('YYYY-MM-DD'));
            }

            $('#reportrange').daterangepicker({
                startDate: start,
                endDate: end,
                ranges: {
                    'Hôm nay': [moment(), moment()],
                    'Hôm qua': [moment().subtract(1, 'days'), moment()],
                    '7 ngày qua': [moment().subtract(6, 'days'), moment()],
                    '30 ngày qua': [moment().subtract(29, 'days'), moment()],
                    'Tháng này': [moment().startOf('month'), moment().endOf('month')],
                    'Tháng trước': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
                }
            }, cb);

            cb(start, end);

            function updateChart(startDate, endDate) {
                $.ajax({
                    url: '@Url.Page("Index", "FilterData")',
                    method: 'GET',
                    data: { startDate: startDate, endDate: endDate },
                    success: function (response) {
                        if (response) {

                            orderChart.data.labels = response.dates;
                            orderChart.data.datasets[0].data = response.counts;
                            orderChart.update();
                        }
                    },
                    error: function () {
                        alert('Failed to retrieve chart data.');
                    }
                });
            }


            $(document).ready(chartCreate);

            function chartCreate() {
                var ctx1 = document.getElementById('orderChart').getContext('2d');
                window.orderChart = new Chart(ctx1, {
                    type: 'line',
                    data: {
                        labels: [],
                        datasets: [{
                            label: 'Orders Created',
                            data: [],
                            backgroundColor: 'rgba(75, 192, 192, 0.2)',
                            borderColor: 'rgba(75, 192, 192, 1)',
                            borderWidth: 1,
                            tension: 0.3,
                            pointRadius: 5,
                            fill: true
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        scales: {
                            x: {
                                title: {
                                    display: true,
                                    text: 'Ngày',
                                    color: '#666',
                                },
                                ticks: {
                                    autoSkip: true,
                                    maxRotation: 45,
                                    minRotation: 30
                                }
                            },
                            y: {
                                title: {
                                    display: true,
                                    text: 'Số lượng đơn hàng',
                                    color: '#666',
                                },
                                beginAtZero: true,
                                ticks: {
                                    stepSize: 1,
                                }
                            }
                        },
                        plugins: {
                            legend: {
                                display: false
                            }
                        }
                    }
                });
            }
        });


        function bindRowClickEvent() {
            $('tr[data-id]').click(function (event) {
                if ($(event.target).closest('select').length > 0) {
                    return;
                }

                var orderId = $(this).data('id');

                $.ajax({
                    url: '/Index?handler=OrderDetails',
                    method: 'GET',
                    data: { id: orderId },
                    success: function (data) {
                        if (data) {

                            $('#customerName').text(data.customerName || 'N/A');
                            $('#customerEmail').text(data.customerEmail || 'N/A');
                            $('#customerPhone').text(data.customerPhone || 'N/A');
                            $('#customerAddress').text(data.customerAddress || 'N/A');


                            var orderItemsBody = $('#orderItemsBody');

                            orderItemsBody.empty();

                            data.orderItems.forEach(function (item) {
                                var formattedPrice = new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(item.price);
                                var row = '<tr>' +
                                    '<td>' + (item.productName || 'Unknown Product') + '</td>' +
                                    '<td>' + (item.quantity || 0) + '</td>' +
                                    '<td>' + (item.color || Không) + '</td>' +
                                    '<td>' + (item.size || Không) + '</td>' +
                                    '<td>' + formattedPrice + '</td>' +
                                    '</tr>';
                                orderItemsBody.append(row);

                            });
                            var couponName = data.couponName || 'Không có mã giảm';
                            $('#coupon').text(couponName);

                            if (data.couponName && data.discount) {
                                var discountAmount = data.discount;
                                $('#discount').text('(' + discountAmount + ' %)');
                            } else {
                                $('#discount').text('');
                            }


                            var totalAmountFormatted = new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(data.totalAmount);
                            $('#totalAmount').text(totalAmountFormatted);


                            $('#orderDetailsModal').modal('show');
                        }
                    },
                    error: function () {
                        alert('Error fetching order details.');
                    }
                });
            });
        }



        $(document).ready(function () {

            $('#searchForm').on('submit', function (e) {
                e.preventDefault();

                var searchString = $('#searchString').val();


                $.ajax({
                    url: '/Index',
                    method: 'GET',
                    data: {
                        searchString: searchString
                    },
                    success: function (data) {

                        $('#orderTableBody').html($(data).find('#orderTableBody').html());


                        $('.pagination').html($(data).find('.pagination').html());


                        bindPaginationEvents();
                        bindRowClickEvent();
                    },
                    error: function () {
                        alert('Failed to fetch search results.');
                    }
                });
            });
        });

        function bindPaginationEvents() {
            $('.pagination a.page-link').on('click', function (e) {
                e.preventDefault();

                var pageNumber = $(this).data('page');
                var searchString = $('#searchString').val();

                if (pageNumber > 0) {
                    $.ajax({
                        url: '/Index',
                        method: 'GET',
                        data: {
                            pageNumber: pageNumber,
                            searchString: searchString
                        },
                        success: function (data) {

                            $('#orderTableBody').html($(data).find('#orderTableBody').html());
                            $('.pagination').html($(data).find('.pagination').html());


                            bindPaginationEvents();
                            bindRowClickEvent();
                        },
                        error: function () {
                            alert('Failed to load the page.');
                        }
                    });
                }
            });
        }


        $(document).ready(function () {
            bindRowClickEvent();
            bindPaginationEvents();
        });


        $(document).on('change', '.status-dropdown', function (e) {
            e.preventDefault();
            var newStatus = $(this).val();
            var orderId = $(this).data('order-id');

            $.ajax({
                url: '/Index?handler=UpdateStatus',
                type: 'GET',
                data: {
                    id: orderId,
                    status: newStatus
                },
                success: function (response) {

                    if (response.success) {

                        var statusCell = $('tr[data-id="' + orderId + '"] td:eq(6)');
                        var statusDropdown = statusCell.find('select');

                        statusDropdown.val(newStatus);
                        updateStatusColor(statusDropdown, newStatus);

                    } else {
                        alert("Cập nhật trạng thái thất bại: " + response.message);
                    }
                },
                error: function (e) {
                    console.log(e);
                    debugger
                }
            });
        });


        function updateStatusColor(selectElement, status) {
            switch (status) {
                case 'Active':
                    selectElement.css('color', 'green');
                    break;
                case 'Completed':
                    selectElement.css('color', 'blue');
                    break;
                case 'Cancelled':
                    selectElement.css('color', 'red');
                    break;
                case 'Shipping':
                    selectElement.css('color', 'black');
                    break;
                default:
                    selectElement.css('color', 'black');
            }
        }

        $(document).ready(function () {
         
            function fetchBestSellingProducts(period) {
                $.ajax({
                    url: '@Url.Page("/Index")', 
                    type: 'GET',
                    data: {
                        handler: "TopSellingProducts", 
                        period: period
                    },
                    success: function (data) {
                        if (data.success) {
                            var productsHtml = '';
                            $.each(data.products, function (index, product) {
                                productsHtml += `
                                    <div class="col-md-12 row my-3">
                                        <div class="col-md-2">
                                            <a href="/ProductDetails/${product.productId}">
                                                        <img src="${product.productImageUrl}" alt="${product.productName}" class="img-fluid" style="width: 80px; height: 80px">
                                            </a>
                                        </div>
                                        <div class="col-md-10 item-info row">
                                            <div class="col-md-5">
                                                <div class="item-name mt-2">
                                                    <strong><a href="/ProductDetails/${product.productId}">${product.productName}</a></strong>
                                                </div>
                                                <div class="item-price mt-2">
                                                 <strong>Doanh Thu: </strong>   <span>$${product.totalSales.toFixed(2)}</span>
                                                </div>
                                            </div>
                                            <div class="col-md-7">
                                                <div class="item-category mt-2">
                                                    <strong>LOẠI:</strong> <span>${product.categoryName || 'N/A'}</span>
                                                </div>
                                                <div class="item-collection mt-2">
                                                            <strong>Bộ Sưu Tập:</strong> <span>${product.collectionName || 'N/A'}</span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>`;
                            });
                            $('#best-selling-items').html(productsHtml); 
                        } else {
                            $('#best-selling-items').html('<p>No best-selling products available.</p>');
                        }
                    },
                    error: function (error) {
                        console.error("Error fetching data: ", error);
                    }
                });
            }

            // Handle period button click
            $('.period-btn').click(function () {
                var period = $(this).data('period');
                fetchBestSellingProducts(period);  // Fetch products for the selected period
            });

            // Fetch monthly products by default on page load
            fetchBestSellingProducts('monthly');
        });
    </script>
}