@page
@model IndexModel   
@using System.Text.Json
@{
    ViewData["Title"] = "Home page";
}
<style>
    /* Fixed size chart container */
    .chart-container {
        position: relative;
        width: 80%; /* Fixed width percentage */
        max-width: 1000px; /* Maximum width */
        margin: 0 auto;
    }

    /* Fixed canvas size */
    canvas {
        width: 100% !important; /* Full width of the container */
        height: 400px !important; /* Fixed height */
    }
</style>
<div class="container">
    <h1 class="my-4">Dashboard</h1>
    <div class="row text-center">
        <!-- Total Sales -->
        <div class="col-lg-3 col-md-6 mb-4">
            <div class="card border-success">
                <div class="card-body">
                    <h5 class="card-title">$5,558.00</h5>
                    <p class="card-text">Total Sales</p>
                    <i class="fas fa-money-bill-alt fa-2x text-success"></i> <!-- Font Awesome icon -->
                </div>
            </div>
        </div>
        <!-- Total Orders -->
        <div class="col-lg-3 col-md-6 mb-4">
            <div class="card border-primary">
                <div class="card-body">
                    <h5 class="card-title">@Model.Orders.Count</h5>
                    <p class="card-text">Total Orders</p>
                    <i class="fas fa-shopping-cart fa-2x text-primary"></i> <!-- Font Awesome icon -->
                </div>
            </div>
        </div>

        <!-- Total Customers -->
        <div class="col-lg-3 col-md-6 mb-4">
            <div class="card border-danger">
                <div class="card-body">
                    <h5 class="card-title">@Model.ShopUsers.Count</h5>
                    <p class="card-text">Total Customers</p>
                    <i class="fas fa-user fa-2x text-danger"></i> <!-- Red icon using text-danger -->
                </div>
            </div>
        </div>

        <!-- People Online -->
        <div class="col-lg-3 col-md-6 mb-4">
            <div class="card border-warning">
                <div class="card-body">
                    <h5 class="card-title">0</h5>
                    <p class="card-text">People Online</p>
                    <i class="fas fa-users fa-2x text-warning"></i> <!-- Yellow icon using text-warning -->
                </div>
            </div>
        </div>
    </div>
    <div class="row align-items-center my-4">
        <!-- Icon and Analytics text -->
        <div class="col-auto">
            <i class="fas fa-chart-bar fa-lg text-muted"></i> <!-- Analytics icon -->
            <span class="ml-2 font-weight-bold">Analytics</span>
        </div>

        <!-- Day, Month, Year Buttons -->
        <div class="col-auto">
            <!-- Button Group for Day, Month, Year -->
            <div class="btn-group" role="group" aria-label="Date range options">
                <button type="button" class="btn btn-light">Day</button>        
                <button type="button" class="btn btn-light">Month</button>
                <button type="button" class="btn btn-light">Year</button>
            </div>
        </div>
        <div class="col-auto">
            <div id="reportrange" style="background: #fff; cursor: pointer; padding: 5px 10px; border: 1px solid #ccc; width: 100%">
                <i class="fa fa-calendar"></i>&nbsp;
                <span></span> <i class="fa fa-caret-down"></i>
            </div>
        </div>
        </div>
    </div>

<div class="chart-container">
    <canvas id="orderChart"></canvas>
</div>

<div class="modal fade" id="orderDetailsModal" tabindex="-1" aria-labelledby="orderDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="model-header d-flex justify-content-between align-item-center p-3">
                <h4 class="modal-title" id="orderDetailsModalLabel">Order Details</h4>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <h5>Customer Information</h5>
                <p><strong>Name:</strong> <span id="customerName"></span></p>
                <p><strong>Email:</strong> <span id="customerEmail"></span></p>
                <p><strong>Phone:</strong> <span id="customerPhone"></span></p>
                <p><strong>Shipping Address:</strong> <span id="customerAddress"></span></p>
                <hr></hr>
                <h5>Order Items</h5>
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Product</th>
                            <th>Quantity</th>
                            <th>Price</th>
                        </tr>
                    </thead>
                    <tbody id="orderItemsBody">
                        <!-- Order items will be populated here -->
                    </tbody>
                    
                </table>
                <span>Total: </span><span id="totalAmount"></span>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
    <h1>Latest Orders</h1>
<form method="get" class="d-flex">
    <input type="text" asp-for="SearchString" class="form-control" placeholder="Search Orders...">
    <button type="submit" class="btn btn-primary ms-2">
        <i class="fas fa-search"></i>
    </button>
</form>


    <table class="table table-striped table-bordered table-hover mt-4">
        <thead class="thead-dark">
            <tr>
                <th>Id</th>
                <th>UserId</th>
                <th>Total Amount</th>
                <th>Shipping Address</th>
                <th>Payment Method</th>
                <th>Created At</th>
                <th>Status</th>
            </tr>
        </thead>
       <tbody>
            @foreach (var order in Model.Orders)
            {
                <tr style="cursor: pointer" data-id="@order.Id">
                    
                    <td>@order.Id</td>
                    <td>@order.UserId</td>
                    <td>@order.TotalAmount</td>
                    <td>@order.ShippingAddress</td>
                    <td>@order.PaymentMethod</td>
                    <td>@order.CreatedAt</td>
                    <td>
                    <form method="post" asp-page-handler="UpdateStatus" style="display:inline-block;">
                    <input type="hidden" name="Id" value="@order.Id" />
                        <select name="status" class="form-control" onchange="this.form.submit()" style="color: @(order.status == "Pending" ? "black" : (order.status == "Active" ? "green" : (order.status == "Completed" ? "blue" : "red")) );">
                        <option>@order.status</option>
                        <option value="Active" style="color: green">Active</option>
                        <option value="Completed" style="color: blue">Completed</option>    
                        <option value="Cancelled" style="color: red">Cancelled</option>
                    </select>
                </form>
                    </td>
                    <td>
                        <form method="post" asp-page-handler="Delete" style="display:inline-block;">
                            <input type="hidden" name="Id" value="@order.Id" />
                            <button type="submit" class="btn btn-danger">Delete</button>
                        </form>
                    </td>
                
                </tr>
                
            }
        </tbody> 
    </table>
    <div class="row">
        <div class="col-md-12">
        <nav aria-label="Order pagination">
            <ul class="pagination justify-content-center">
                <li class="page-item @(Model.PageNumber == 1 ? "disabled" : "")">
                    <a class="page-link" asp-route-pageNumber="@(Model.PageNumber - 1)" aria-label="Previous">
                        <span aria-hidden="true">&laquo;</span>
                    </a>
                </li>
                @for (var i = 1; i <= Model.TotalPages; i++)
                {
                    <li class="page-item @(Model.PageNumber == i ? "active" : "")">
                        <a class="page-link" asp-route-pageNumber="@i">@i</a>
                    </li>
                }
                <li class="page-item @(Model.PageNumber == Model.TotalPages ? "disabled" : "")">
                    <a class="page-link" asp-route-pageNumber="@(Model.PageNumber + 1)" aria-label="Next">
                        <span aria-hidden="true">&raquo;</span>
                    </a>
                </li>
            </ul>
        </nav>
        </div>
    </div>

@section Scripts {
    <script type="text/javascript">
        $(function () {

            var start = moment().subtract(29, 'days');
            var end = moment();

            function cb(start, end) {
                $('#reportrange span').html(start.format('MMMM D, YYYY') + ' - ' + end.format('MMMM D, YYYY'));
            }

            $('#reportrange').daterangepicker({
                startDate: start,
                endDate: end,
                ranges: {
                    'Today': [moment(), moment()],
                    'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
                    'Last 7 Days': [moment().subtract(6, 'days'), moment()],
                    'Last 30 Days': [moment().subtract(29, 'days'), moment()],
                    'This Month': [moment().startOf('month'), moment().endOf('month')],
                    'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
                }
            }, cb);

            cb(start, end);

        });
        $(document).ready(function () {
            var dates = @Html.Raw(JsonSerializer.Serialize(Model.Dates));
            var orderCounts = @Html.Raw(JsonSerializer.Serialize(Model.OrderCounts));

            var ctx1 = document.getElementById('orderChart').getContext('2d');
            var orderChart = new Chart(ctx1, {
                type: 'line',
                data: {
                    labels: dates, // Dates from the model
                    datasets: [{
                        label: 'Orders Created',
                        data: orderCounts,
                        backgroundColor: 'rgba(75, 192, 192, 0.2)', // Softer background color
                        borderColor: 'rgba(75, 192, 192, 1)', // Softer border color
                        borderWidth: 1, // Thinner border
                        tension: 0.3, // Smoother line curves
                        pointRadius: 5, // Slightly larger point radius
                        fill: true
                    }]
                },
                options: {
                    responsive: true, // Enable responsiveness
                    maintainAspectRatio: false, // Allow chart to resize within fixed dimensions
                    scales: {
                        x: {
                            title: {
                                display: true,
                                text: 'Date',
                                color: '#666', // Softer text color
                            },
                            ticks: {
                                autoSkip: true, // Automatically skip labels if too crowded
                                maxRotation: 45, // Rotate labels if needed
                                minRotation: 30 // Minimum rotation to avoid overlap
                            }
                        },
                        y: {
                            title: {
                                display: true,
                                text: 'Number of Orders Created',
                                color: '#666', // Softer text color
                            },
                            beginAtZero: true,
                            ticks: {
                                stepSize: 1, // Ensure the gap between ticks is 1
                            }
                        }
                    },
                    plugins: {
                        legend: {
                            display: false // Hide the legend for a cleaner look
                        }
                    }
                }
            });
        });

        $(document).ready(function () {
            // Handle row click event
            $('tr[data-id]').click(function (event) {
                // Check if the click was inside the status select dropdown
                if ($(event.target).closest('select').length > 0) {
                    // If clicked inside the dropdown, prevent the modal from showing
                    return;
                }

                var orderId = $(this).data('id');

                // Perform an AJAX request to get order details
                $.ajax({
                    url: '/Index?handler=OrderDetails',  // Razor Page Handler URL
                    method: 'GET',
                    data: { id: orderId },
                    success: function (data) {
                        if (data) {
                            // Populate the customer info
                            $('#customerName').text(data.customerName || 'N/A');
                            $('#customerEmail').text(data.customerEmail || 'N/A');
                            $('#customerPhone').text(data.customerPhone || 'N/A');
                            $('#customerAddress').text(data.customerAddress || 'N/A');

                            // Populate order items
                            var orderItemsBody = $('#orderItemsBody');
                            orderItemsBody.empty();  // Clear previous content

                            data.orderItems.forEach(function (item) {
                                var formattedPrice = new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(item.price);
                                var row = '<tr>' +
                                    '<td>' + item.productName + '</td>' +
                                    '<td>' + item.quantity + '</td>' +
                                    '<td>' + formattedPrice + '</td>' +
                                    '</tr>';
                                orderItemsBody.append(row);
                            });
                            var totalAmountFormatted = new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(data.totalAmount);
                            $('#totalAmount').text(totalAmountFormatted);
                            // Show the modal
                            $('#orderDetailsModal').modal('show');
                        }
                    },
                    error: function () {
                        alert('Error fetching order details.');
                    }
                });
            });
        });



    </script>
    <script type="text/javascript" src="https://cdn.jsdelivr.net/jquery/latest/jquery.min.js"></script>
    <script type="text/javascript" src="https://cdn.jsdelivr.net/momentjs/latest/moment.min.js"></script>
    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.min.js"></script>
    <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.css" />
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

}