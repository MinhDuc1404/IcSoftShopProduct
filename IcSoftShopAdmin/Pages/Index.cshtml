@page
@model IndexModel   
@using System.Text.Json
@{
    ViewData["Title"] = "Home page";
}
<style>
  
    .chart-container {
        position: relative;
        width: 80%;
        max-width: 1000px;
        margin: 0 auto;
    }

    
    canvas {
        width: 100% !important; 
        height: 400px !important; 
    }
</style>
<div class="container">
    <h1 class="my-4">Bảng điều khiển</h1>
    <div class="row text-center">
      
        <div class="col-lg-3 col-md-6 mb-4">
            <div class="card border-success">
                <div class="card-body">
                    <h5 class="card-title">@Model.TotalSales.ToString("N2")<span>VND</span></h5>
                    <p class="card-text">Tổng doanh thu</p>
                    <i class="fas fa-money-bill-alt fa-2x text-success"></i> 
                </div>
            </div>
        </div>
     
        <div class="col-lg-3 col-md-6 mb-4">
            <div class="card border-primary">
                <div class="card-body">
                    <h5 class="card-title">@Model.TotalOrders</h5>
                    <p class="card-text">Tổng đơn hàng</p>
                    <i class="fas fa-shopping-cart fa-2x text-primary"></i> 
                </div>
            </div>
        </div>

      
        <div class="col-lg-3 col-md-6 mb-4">
            <div class="card border-danger">
                <div class="card-body">
                    <h5 class="card-title">@Model.ShopUsers.Count</h5>
                    <p class="card-text">Tổng khách hàng</p>
                    <i class="fas fa-user fa-2x text-danger"></i> 
                </div>
            </div>
        </div>

       
        <div class="col-lg-3 col-md-6 mb-4">
            <div class="card border-warning">
                <div class="card-body">
                    <h5 class="card-title">0</h5>
                    <p class="card-text">Số người online</p>
                    <i class="fas fa-users fa-2x text-warning"></i> 
                </div>
            </div>
        </div>
    </div>
    <div class="row align-items-center my-4">
      
        <div class="col-auto">
            <i class="fas fa-chart-bar fa-lg text-muted"></i> 
            <span class="ml-2 font-weight-bold">Phân tích</span>
        </div>

        <div class="col-auto">
           
            <div class="btn-group" role="group" aria-label="Lựa chọn khoảng thời gian">
                <button type="button" class="btn btn-light">Ngày</button>
                <button type="button" class="btn btn-light">Tháng</button>
                <button type="button" class="btn btn-light">Năm</button>
            </div>
        </div>
        <div class="col-auto">
            <div id="reportrange" style="background: #fff; cursor: pointer; padding: 5px 10px; border: 1px solid #ccc; width: 100%">
                <i class="fa fa-calendar"></i>&nbsp;
                <span></span> <i class="fa fa-caret-down"></i>
            </div>
        </div>
    </div>
</div>

<div class="chart-container">
    <canvas id="orderChart"></canvas>
</div>

<div class="modal fade" id="orderDetailsModal" tabindex="-1" aria-labelledby="orderDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="model-header d-flex justify-content-between align-item-center p-3">
                <h4 class="modal-title" id="orderDetailsModalLabel">Chi tiết đơn hàng</h4>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Đóng"></button>
            </div>
            <div class="modal-body">
                <h5>Thông tin khách hàng</h5>
                <p><strong>Tên:</strong> <span id="customerName"></span></p>
                <p><strong>Email:</strong> <span id="customerEmail"></span></p>
                <p><strong>Số điện thoại:</strong> <span id="customerPhone"></span></p>
                <p><strong>Địa chỉ nhận hàng:</strong> <span id="customerAddress"></span></p>
                <hr></hr>
                <h5>Sản phẩm đặt hàng</h5>
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Sản phẩm</th>
                            <th>Số lượng</th>
                            <th>Giá</th>
                        </tr>
                    </thead>
                    <tbody id="orderItemsBody">
                       
                    </tbody>

                </table>
                <span>Tổng cộng: </span><span id="totalAmount"></span>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
            </div>
        </div>
    </div>
</div>
<h1>Đơn hàng mới nhất</h1>
<form method="get" class="d-flex">
    <input type="text" asp-for="SearchString" class="form-control" placeholder="Tìm kiếm đơn hàng...">
    <button type="submit" class="btn btn-primary ms-2">
        <i class="fas fa-search"></i>
    </button>
</form>

<div class="mt-4 table-responsive" style="max-height: calc(100vh - 16rem)">
<table class="table table-striped table-bordered table-hover mt-4">
    <thead class="thead-dark position-sticky top-0 bg-secondary text-white">
        <tr>
            <th>Mã Đơn</th>
            <th>Mã Khách Hàng</th>
            <th>Giá Tiền</th>
            <th>Địa chỉ nhận hàng</th>
            <th>Thanh Toán</th>
            <th>Ngày</th>
            <th>Trạng Thái</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var order in Model.Orders)
        {
            <tr style="cursor: pointer" data-id="@order.Id">

                <td>@order.Id</td>
                <td>@order.UserId</td>
                <td>@order.TotalAmount</td>
                <td>@order.ShippingAddress</td>
                <td>@order.PaymentMethod</td>
                <td>@order.CreatedAt</td>
                <td>
                    <form method="post" asp-page-handler="UpdateStatus" style="display:inline-block;">
                        <input type="hidden" name="Id" value="@order.Id" />
                        <select name="status" class="form-control" onchange="this.form.submit()" style="color: @(order.status == "Pending" ? "black" : (order.status == "Active" ? "green" : (order.status == "Completed" ? "blue" : "red")) );">
                            <option>@order.status</option>
                            <option value="Active" style="color: green">Đang hoạt động</option>
                            <option value="Completed" style="color: blue">Hoàn thành</option>
                            <option value="Cancelled" style="color: red">Đã hủy</option>
                        </select>
                    </form>
                </td>
                <td>
                    <form method="post" asp-page-handler="Delete" style="display:inline-block;">
                        <input type="hidden" name="Id" value="@order.Id" />
                        <button type="submit" class="btn btn-danger">Xóa</button>
                    </form>
                </td>

            </tr>

        }
    </tbody>
</table>
</div>
<div class="row">
    <div class="col-md-12">
        <nav aria-label="Order pagination">
            <ul class="pagination justify-content-center">
                <li class="page-item @(Model.PageNumber == 1 ? "disabled" : "")">
                    <a class="page-link" asp-route-pageNumber="@(Model.PageNumber - 1)" aria-label="Trước">
                        <span aria-hidden="true">&laquo;</span>
                    </a>
                </li>
                @for (var i = 1; i <= Model.TotalPages; i++)
                {
                    <li class="page-item @(Model.PageNumber == i ? "active" : "")">
                        <a class="page-link" asp-route-pageNumber="@i">@i</a>
                    </li>
                }
                <li class="page-item @(Model.PageNumber == Model.TotalPages ? "disabled" : "")">
                    <a class="page-link" asp-route-pageNumber="@(Model.PageNumber + 1)" aria-label="Tiếp">
                        <span aria-hidden="true">&raquo;</span>
                    </a>
                </li>
            </ul>
        </nav>
    </div>
</div>
</div>
        
@section Scripts {
    <script type="text/javascript" src="https://cdn.jsdelivr.net/jquery/latest/jquery.min.js"></script>
    <script type="text/javascript" src="https://cdn.jsdelivr.net/momentjs/latest/moment.min.js"></script>
    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.min.js"></script>
    <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.css" />
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <script type="text/javascript">
      
            $(function () {
                var start = moment().subtract(29, 'days');
                var end = moment();

                function cb(start, end) {
                    $('#reportrange span').html(start.format('MMMM D, YYYY') + ' - ' + end.format('MMMM D, YYYY'));

                    // Call the function to update the chart when date range changes
                    updateChart(start.format('YYYY-MM-DD'), end.format('YYYY-MM-DD'));
                }

                $('#reportrange').daterangepicker({
                    startDate: start,
                    endDate: end,
                ranges: {
                    'Hôm nay': [moment(), moment()],
                    'Hôm qua': [moment().subtract(1, 'days'), moment()],
                    '7 ngày qua': [moment().subtract(6, 'days'), moment()],
                    '30 ngày qua': [moment().subtract(29, 'days'), moment()],
                    'Tháng này': [moment().startOf('month'), moment().endOf('month')],
                    'Tháng trước': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
                }
                }, cb);

                cb(start, end);

                function updateChart(startDate, endDate) {
                    $.ajax({
                        url: '@Url.Page("Index", "FilterData")', 
                        method: 'GET',
                        data: { startDate: startDate, endDate: endDate },
                        success: function (response) {
                            if (response) {
                                
                                orderChart.data.labels = response.dates;
                                orderChart.data.datasets[0].data = response.counts;
                                orderChart.update(); 
                            }
                        },
                        error: function () {
                            alert('Failed to retrieve chart data.');
                        }
                    });
                }

                
                $(document).ready(chartCreate);

                function chartCreate() {
                    var ctx1 = document.getElementById('orderChart').getContext('2d');
                    window.orderChart = new Chart(ctx1, {
                        type: 'line',
                        data: {
                            labels: [], // Initialize with empty data
                            datasets: [{
                                label: 'Orders Created',
                                data: [],
                                backgroundColor: 'rgba(75, 192, 192, 0.2)',
                                borderColor: 'rgba(75, 192, 192, 1)',
                                borderWidth: 1,
                                tension: 0.3, 
                                pointRadius: 5, 
                                fill: true
                            }]
                        },
                        options: {
                            responsive: true, 
                            maintainAspectRatio: false, 
                            scales: {
                                x: {
                                    title: {
                                        display: true,
                                        text: 'Date',
                                        color: '#666', 
                                    },
                                    ticks: {
                                        autoSkip: true, 
                                        maxRotation: 45, 
                                        minRotation: 30 
                                    }
                                },
                                y: {
                                    title: {
                                        display: true,
                                        text: 'Number of Orders Created',
                                        color: '#666', 
                                    },
                                    beginAtZero: true,
                                    ticks: {
                                        stepSize: 1, 
                                    }
                                }
                            },
                            plugins: {
                                legend: {
                                    display: false 
                                }
                            }
                        }
                    });
                }
            });


        $(document).ready(function () {
            // Handle row click event
            $('tr[data-id]').click(function (event) {
        
                if ($(event.target).closest('select').length > 0) {
                   
                    return;
                }

                var orderId = $(this).data('id');

               
                $.ajax({
                    url: '/Index?handler=OrderDetails',  
                    method: 'GET',
                    data: { id: orderId },
                    success: function (data) {
                        if (data) {
                            // Populate the customer info
                            $('#customerName').text(data.customerName || 'N/A');
                            $('#customerEmail').text(data.customerEmail || 'N/A');
                            $('#customerPhone').text(data.customerPhone || 'N/A');
                            $('#customerAddress').text(data.customerAddress || 'N/A');

                            // Populate order items
                            var orderItemsBody = $('#orderItemsBody');
                            orderItemsBody.empty();  // Clear previous content

                            data.orderItems.forEach(function (item) {
                                var formattedPrice = new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(item.price);
                                var row = '<tr>' +
                                    '<td>' + item.productName + '</td>' +
                                    '<td>' + item.quantity + '</td>' +
                                    '<td>' + formattedPrice + '</td>' +
                                    '</tr>';
                                orderItemsBody.append(row);
                            });
                            var totalAmountFormatted = new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(data.totalAmount);
                            $('#totalAmount').text(totalAmountFormatted);
                            // Show the modal
                            $('#orderDetailsModal').modal('show');
                        }
                    },
                    error: function () {
                        alert('Error fetching order details.');
                    }
                });
            });
        });



    </script>
   

}