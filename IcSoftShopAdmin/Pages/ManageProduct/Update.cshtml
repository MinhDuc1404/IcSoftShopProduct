@page "{id:int}"
@model IcSoftShopAdmin.Pages.ManageProduct.UpdateModel
@inject IConfiguration Config
@{
    var i = 0;
    var domainUrl = Config.GetValue<string>("AppSettings:DomainUrl");
}

<h2>Cập nhật sản phẩm</h2>

<form method="post" enctype="multipart/form-data">
    <input type="hidden" asp-for="Product.ProductId" />
    <input type="hidden" asp-for="Product.CreatedDate" />
    <input type="hidden" asp-for="Product.ProductSizeImage" />
    <div class="row">
        <div class="form-group col-lg-6 col-12 col-md-6 mb-3">
            <label asp-for="Product.ProductName">Tên sản phẩm</label>
            <input asp-for="Product.ProductName" class="form-control" required/>

        </div>

        <div class="form-group col-lg-3 col-12 col-md-3 mb-3">
            <label asp-for="Product.ProductPrice">Giá sản phẩm</label>
            <input asp-for="Product.ProductPrice" class="form-control" required/>

        </div>

        <div class="form-group col-lg-3 col-12 col-md-3 mb-3">
            <label asp-for="Product.ProductQuantity">Số lượng</label>
            <input asp-for="Product.ProductQuantity" class="form-control" required/>

        </div>

        <div class="form-group col-lg-9 col-12 col-md-12 mb-3">
            <label asp-for="Product.ProductDescription">Mô tả</label>
            <textarea asp-for="Product.ProductDescription" class="form-control" required></textarea>
        </div>

        <div class="form-group col-lg-3 col-12 col-md-3 mb-3">
            <label asp-for="Product.ProductSale">Giảm giá</label>
            <input asp-for="Product.ProductSale" class="form-control" />

        </div>

        <div class="form-group col-12 col-md-6 mb-3">
            <label>Màu sắc</label>
            <div class="color-options d-flex flex-wrap">
                
                @foreach (var color in Model.AvailableColors)
                {
                    <div class="color-circle m-1">
                        <input type="checkbox" id="color_@color.ColorId" name="SelectedColorIds" value="@color.ColorId"
                        @(Model.SelectedColorIds.Contains(color.ColorId) ? "checked" : "") />
                        <label for="color_@color.ColorId" style="background-color:@color.ColorCode;"></label>
                    </div>
                }
            </div>

        </div>

        <div class="form-group col-12 col-md-6 mb-3">
            <label>Kích thước</label>
            <div class="size-options d-flex flex-wrap">
                @foreach (var size in Model.AvailableSizes)
                {
                    <input type="checkbox" id="size_@size.SizeId" name="SelectedSizeIds" value="@size.SizeId" class="size-checkbox"
                    @(Model.SelectedSizeIds.Contains(size.SizeId) ? "checked" :"")/>
                    <label for="size_@size.SizeId" class="size-square m-1">@size.SizeName</label>
                }
            </div>

        </div>

        <div class="form-group col-12 col-md-6 mb-3">
            <label asp-for="Product.CategoryID">Danh Mục</label>
            <select asp-for="Product.CategoryID" asp-items="Model.Categories" class="form-control" required>
            </select>

        </div>


        <div class="form-group col-12 col-md-6 mb-3">
            <label asp-for="Product.CollectionID">Bộ Sưu Tập</label>
            <select asp-for="Product.CollectionID" asp-items="Model.Collections" class="form-control" required>
            </select>

        </div>

        <div id="RemovedImageIdsContainer"></div>
        <div id="RemovedImageSizesContainer"></div>



        <label for="ProductImages">Hình ảnh sản phẩm</label>
       
            <div id="imageUploadContainer" class="d-flex flex-wrap">

            @foreach (var image in Model.Product.ProductImage)
            {
                <div class="form-group col-3 mb-3">
                    <div class="image-upload-container">

                        <input asp-for="ProductImages" type="file" accept="image/*" class="d-none" id="ProductImages_@image.ImageId" name="ProductImages_@image.ImageId" onchange="previewImage(this);" />
                        <div class="image-preview" onclick="document.getElementById('ProductImages_@image.ImageId').click();">
                            <img src="@domainUrl/@image.ImageUrl" alt="Product Image @image.ImageId" />
                            <span class="remove-image" onclick="removeImage(this, @image.ImageId)">X</span>
                        </div>
                    </div>
                </div>
            }


            </div>

            <button type="button" id="addImageButton" class="btn btn-secondary col-lg-2 ">Thêm ảnh</button>
    
        @if(Model.Product.ProductSizeImage != null)
        {
            <label for="ProductImageSizeLabel">Hình ảnh kích cỡ sản phẩm</label>
            <div id="productImageSizeAvailable" class="form-group col-3 mb-3">
                <div class="imagesize-upload-container">
                    <input asp-for="ProductImageSize" type="file" accept="image/*" class="d-none" id="ProductImageSize" name="ProductImageSize" onchange="previewProductImageSize(this);" />
                    <div class="image-preview" onclick="document.getElementById('ProductImageSize').click();">
                        <img src="@domainUrl/@Model.Product.ProductSizeImage"/>
                        <span class="remove-image" onclick="removeProductImageSize()">X</span>
                    </div>
                </div>
            </div>

        }
        else
        {
            <div class="form-group col-12">
                <input type="checkbox" id="enableProductImageSize" />
                <label>
                    Tạo ảnh size của sản phẩm
                </label>

            </div>

            <div id="productImageSizeForm" class="form-group col-3 mb-3" style="display: none;">
                <div class="imagesize-upload-container">
                    <input asp-for="ProductImageSize" type="file" accept="image/*" class="d-none" id="ProductImageSize" name="ProductImageSize" onchange="previewProductImageSize(this);" />
                    <div class="image-preview" onclick="document.getElementById('ProductImageSize').click();">
                        <span class="add-image-icon">+</span>
                        <span class="remove-image" onclick="removeProductImageSize()">X</span>
                    </div>
                </div>
            </div>
        }


        <div class="col-12">
            <button type="submit" id="submitBtn" class="btn btn-primary">Lưu</button>
        </div>
    </div>
</form>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <link href="~/css/style.css" rel="stylesheet" asp-append-version="true">
    <script>


       document.getElementById('submitBtn').addEventListener('click', function(event) {

             const selectedColor = document.querySelectorAll('input[name="SelectedColorIds"]:checked');
             const selectedSize = document.querySelectorAll('input[name="SelectedSizeIds"]:checked');

             const productImages = document.querySelectorAll('.image-upload-container img');



                  if (selectedColor.length === 0 || selectedSize.length === 0 || productImages.length === 0) {
                 alert("Vui lòng chọn màu sắc, kích thước và ít nhất một hình ảnh.");
                 event.preventDefault();
             }
         });

     const enableProductImageSize = document.getElementById('enableProductImageSize');
        if (enableProductImageSize) {
            enableProductImageSize.addEventListener('change', function () {
                const productImageSizeForm = document.getElementById('productImageSizeForm');
                if (this.checked) {
                    productImageSizeForm.style.display = 'block';
                } else {
                    productImageSizeForm.style.display = 'none';
                    resetProductImageSize();
                }
            });
        }
                 function resetProductImageSize() {
                     document.getElementById('ProductImageSize').value = '';
                     removeProductImageSize();
                 }

            function previewProductImageSize(input) {
                     const imagePreview = input.nextElementSibling;
                     const file = input.files[0];
                     if (file) {
                         const reader = new FileReader();
                         reader.onload = function (e) {
                             const img = document.createElement('img');
                             img.src = e.target.result;
                             img.style.width = '100%';
                             img.style.height = 'auto';
                             img.style.borderRadius = '8px';

                             imagePreview.innerHTML = '';
                             imagePreview.appendChild(img);

                             const removeSpan = document.createElement('span');
                             removeSpan.className = 'remove-image';
                             removeSpan.textContent = 'X';
                             removeSpan.onclick = function () {
                                 removeProductImageSize();
                             };
                             imagePreview.appendChild(removeSpan);
                         };
                         reader.readAsDataURL(file);
                     }
                 }


                 function removeProductImageSize() {
                     const imagePreview = document.getElementById('ProductImageSize').nextElementSibling;
                        const removeimagesize = document.getElementById('RemovedImageSizesContainer');
                       const hiddenInput = document.createElement('input');
                       hiddenInput.type = 'hidden';
                          hiddenInput.name = 'RemovedImageSizes';
                       hiddenInput.value = true;

                      removeimagesize.appendChild(hiddenInput);

                     imagePreview.innerHTML = `
                         <span class="add-image-icon">+</span>
                         <span class="remove-image" onclick="removeProductImageSize()">X</span>`;
                     document.getElementById('ProductImageSize').value = '';
                 }







            document.getElementById('addImageButton').addEventListener('click', function () {
             const newDiv = document.createElement('div');
             newDiv.className = 'form-group col-3 mb-3';

             const newImageUploadContainer = document.createElement('div');
             newImageUploadContainer.className = 'image-upload-container';

             const newInput = document.createElement('input');
             newInput.type = 'file';
             newInput.accept = 'image/*';
             newInput.className = 'd-none';
             newInput.name = 'ProductImages';
             const newInputId = 'ProductImages_' + imageIndex;
             newInput.id = newInputId;
             newInput.onchange = function () {
                 previewImage(this);
             };

             const newImagePreview = document.createElement('div');
             newImagePreview.className = 'image-preview';
             newImagePreview.onclick = function () {
                 document.getElementById(newInputId).click();
             };

             const newSpan = document.createElement('span');
             newSpan.className = 'add-image-icon';
             newSpan.innerHTML = '+';

             const newP = document.createElement('p');
             newP.textContent = 'Thêm hình ảnh';

             const newRemoveSpan = document.createElement('span');
             newRemoveSpan.className = 'remove-image';
             newRemoveSpan.textContent = 'X';
             newRemoveSpan.onclick = function () {
                 removeImage(this);
             };

             newImagePreview.appendChild(newSpan);
             newImagePreview.appendChild(newP);
             newImagePreview.appendChild(newRemoveSpan);

             newImageUploadContainer.appendChild(newInput);
             newImageUploadContainer.appendChild(newImagePreview);
             newDiv.appendChild(newImageUploadContainer);

             document.getElementById('imageUploadContainer').appendChild(newDiv);

             imageIndex++;
         });

   
       

        let imageIndex = @Model.Product.ProductImage.Count() + 1; 

        function previewImage(input) {
            const imagePreview = input.nextElementSibling;
            const file = input.files[0];

            if (file) {
                const reader = new FileReader();
                reader.onload = function (e) {
                    const img = document.createElement('img');
                    img.src = e.target.result;

       
                    imagePreview.innerHTML = ''; 
                    imagePreview.appendChild(img); 

   
                    const removeSpan = document.createElement('span');
                    removeSpan.className = 'remove-image';
                    removeSpan.textContent = 'X';
                    removeSpan.onclick = function () {
                        removeImage(this);
                    };
                    imagePreview.appendChild(removeSpan);
                };
                reader.readAsDataURL(file);
            }
        }


        function removeImage(element, imageId) {
            const imageContainer = element.closest('.form-group');
            const removedImagesContainer = document.getElementById('RemovedImageIdsContainer'); 

            const hiddenInput = document.createElement('input');
            hiddenInput.type = 'hidden';
            hiddenInput.name = 'RemovedImageIds'; 
            hiddenInput.value = imageId;

            removedImagesContainer.appendChild(hiddenInput);

            imageContainer.remove();

            event.stopPropagation();
        }


    </script>

}
