@model ProductDetailsViewModel
<section class="shop-details">
    <div class="product__details__pic">
        <div class="container">
            <div class="row">
                <div class="col-lg-12">
                    <div class="product__details__breadcrumb" style="text-align:left; background-color: #F6F6F6;">
                        <a href="./index.html">Home</a>
                        <a href="./shop.html">Shop</a>
                        <span>@Model.Product.ProductName</span>
                    </div>
                </div>
            </div>
           </div>
           <div class="container">
            <div class="row">
                <div class="col-lg-1 col-md-2">
                    <div class="thumbnail-wrapper" style="position: relative;">
                        <ul class="nav nav-tabs" role="tablist" id="thumb-list" style="overflow: hidden;max-height: 650px;">
                            @foreach (var item in Model.Product.ProductImage.Take(Model.Product.ProductImage.Count - 1))
                            {
                                <li class="nav-item thumbnail-item" style=" margin-bottom: 10px;">
                                    <a class="nav-link" data-toggle="tab" href="#tabs-1" role="tab" data-target="@item.ImageUrl">
                                        <div class="product__thumb__pic set-bg" data-setbg="@item.ImageUrl" style="background-image: url('@item.ImageUrl'); background-size: cover;">
                                        </div>
                                    </a>
                                </li>
                            }
                        </ul>
                    </div>
                </div>


                <div class="col-lg-5 col-md-10">
                    <div class="tab-content">
                        <div class="tab-pane active" id="tabs-1" role="tabpanel">
                            <div class="product__details__pic__item">
                                <!-- Thêm 2 nút điều hướng sang trái và phải -->
                                <button class="nav-btn prev-btn" id="prev-btn">&#10094;</button> <!-- Nút Previous -->
                                <img id="main-image" src="@Model.Product.ProductImage.First().ImageUrl" alt="" class="main-product-image">
                                <button class="nav-btn next-btn" id="next-btn">&#10095;</button> <!-- Nút Next -->
                            </div>
                        </div>
                    </div>
                </div>

          
                <div class="col-lg-6 col-md-12">
                    <div class="product__details__text">
                        <h4>@Model.Product.ProductName</h4>
                        <h2>@Model.Product.ProductPrice.ToString("N0").Replace(",", ".")₫ @* <span>70.00</span> *@</h2>

                        <div class="product__details__option">
                            <div class="product__details__option__color" style="padding-bottom:20px">
                                <h3>Màu sắc:</h3>
                                @foreach(var item in Model.Product.ProductColors)
                                {
                                <label class="c-1" for="sp-1" style="background-color: @item.Color.ColorCode" >
                                    <input type="radio" id="sp-1" >
                                </label>
                                }
                            </div>
                            <br />
                            <div class="product__details__option__size">
                                <h3>Kích cỡ:</h3>
                                @foreach(var item in Model.Product.ProductSizes)
                                {
                                <label for="xxl">
                                    @item.Size.SizeName
                                    <input type="radio" id="xxl">
                                </label>
                                }
                            </div>

                        </div>
                        <div class="product__details__cart__option">
                            <!-- Chèn bức ảnh phía trên nút Add to Cart -->
                            <div class="product__image__full">
                                <img src=@Model.Product.ProductImage.Last().ImageUrl alt="Product Image" class="full-width-image">
                            </div>


                            <!-- Flex container cho quantity và Add to Cart -->
                            <div class="cart-action-row d-flex justify-content-between align-items-center">
                                <div class="custom input_number_product custom-btn-number">
                                    <!-- Nút giảm số lượng -->
                                    <button class="btn btn_num num_1 button button_qty" type="button" onclick="decreaseQty()">-</button>

                                    <!-- Ô nhập số lượng -->
                                    <input type="text" id="qtym" name="quantity" value="1" maxlength="3" class="form-control prd_quantity pd-qtym" onkeypress="return isNumber(event)" onchange="syncQuantity()">

                                    <!-- Nút tăng số lượng -->
                                    <button class="btn btn_num num_2 button button_qty" type="button" onclick="increaseQty()">+</button>
                                </div>

                                <a href="#" class="add-to-cart-btn">Thêm vào giỏ</a>
                            </div>
                      
                    </div>
                </div>
                </div>
               
            </div>
        </div>
    </div>

</section>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>

    $(document).ready(function() {
        $('.nav-link').on('click', function() {
            var targetImage = $(this).data('target'); // Lấy URL của ảnh từ thuộc tính data-target
            $('#main-image').fadeOut(300, function() { // Mờ ảnh lớn
                $(this).attr('src', targetImage).fadeIn(300); // Cập nhật src và hiện lại ảnh
            });
        });
    });
    // Hàm để giảm số lượng
    function decreaseQty() {
        var qtyInput = document.getElementById('qtym');
        var stickResult = document.getElementsByClassName('pd-qtym')[1];
        var qty = parseInt(qtyInput.value);

        if (!isNaN(qty) && qty > 1) {
            qtyInput.value = qty - 1;

        }
    }

    // Hàm để tăng số lượng
    function increaseQty() {
        var qtyInput = document.getElementById('qtym');
        var stickResult = document.getElementsByClassName('pd-qtym')[1];
        var qty = parseInt(qtyInput.value);

        if (!isNaN(qty)) {
            qtyInput.value = qty + 1;
  
        }
    }

    // Kiểm tra xem người dùng nhập có phải là số hay không
    function isNumber(evt) {
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if (charCode > 31 && (charCode < 48 || charCode > 57)) {
            return false; // Không cho phép nhập ký tự không phải số
        }
        return true;
    }

    // Đồng bộ số lượng khi người dùng thay đổi trực tiếp giá trị
    function syncQuantity() {
        var qtyInput = document.getElementById('qtym');
        var stickResult = document.getElementsByClassName('pd-qtym')[1];

        if (qtyInput.value == 0) {
            qtyInput.value = 1; // Đảm bảo số lượng không thấp hơn 1
        }
        stickResult.value = qtyInput.value;
    }


    // Khởi tạo chỉ số hiện tại
    let currentIndex = 0;  // Vị trí hiện tại của ảnh lớn
    let visibleThumbs = 5; // Số lượng ảnh con được hiển thị cùng lúc
    const thumbs = document.querySelectorAll('#thumb-list .thumbnail-item'); // Lấy tất cả ảnh con
    const totalThumbs = thumbs.length;

    document.addEventListener("DOMContentLoaded", function () {
        var mainImage = document.getElementById('main-image');

        // Hàm cập nhật ảnh lớn khi click vào thumbnail
        document.querySelectorAll('.nav-link').forEach(function (thumb, index) {
            thumb.addEventListener('click', function () {
                currentIndex = index;  // Cập nhật index hiện tại
                var targetImage = this.getAttribute('data-target');
                updateMainImage(targetImage);
                ensureVisible(currentIndex);  // Đảm bảo ảnh được hiển thị
                updateActiveThumbnail(currentIndex); // Cập nhật lớp active cho thumbnail
            });
        });

        // Nút Previous
        document.getElementById('prev-btn').addEventListener('click', function () {
            if (currentIndex > 0) {
                currentIndex--;  // Di chuyển về phía trước
                var targetImage = thumbs[currentIndex].querySelector('a').getAttribute('data-target');
                updateMainImage(targetImage);
                ensureVisible(currentIndex);  // Đảm bảo ảnh được hiển thị
                updateActiveThumbnail(currentIndex);
            }
        });

        // Nút Next
        document.getElementById('next-btn').addEventListener('click', function () {
            if (currentIndex < totalThumbs - 1) {
                currentIndex++;  // Di chuyển về phía sau
                var targetImage = thumbs[currentIndex].querySelector('a').getAttribute('data-target');
                updateMainImage(targetImage);
                ensureVisible(currentIndex);  // Đảm bảo ảnh được hiển thị
                updateActiveThumbnail(currentIndex);
            }
        });

        // Hàm để cập nhật ảnh lớn
        function updateMainImage(targetImage) {
            $(mainImage).fadeOut(300, function () {
                $(this).attr('src', targetImage).fadeIn(300);
            });
        }

        // Hàm để đảm bảo ảnh con hiện tại nằm trong vùng hiển thị
        function ensureVisible(index) {
            // Tính toán phạm vi ảnh con hiện tại
            let start = Math.max(0, index - Math.floor(visibleThumbs / 2));
            let end = Math.min(totalThumbs, start + visibleThumbs);

            // Đảm bảo tất cả các ảnh con nằm ngoài phạm vi này sẽ bị ẩn
            thumbs.forEach((thumb, i) => {
                if (i >= start && i < end) {
                    thumb.style.display = 'block';  // Hiển thị các ảnh trong phạm vi
                } else {
                    thumb.style.display = 'none';  // Ẩn các ảnh không nằm trong phạm vi
                }
            });
        }

        // Cập nhật lớp active cho thumbnail
        function updateActiveThumbnail(index) {
            $('.thumbnail-item').removeClass('active');
            $('.thumbnail-item').eq(index).addClass('active');
        }
    });

    // Mã để điều chỉnh hiển thị khi click vào thumbnail đã được điều chỉnh trong sự kiện click
    $(document).ready(function () {
        $('.thumbnail-item').first().addClass('active');
        $('.nav-link').on('click', function () {
            var targetImage = $(this).data('target'); // Lấy URL của ảnh từ thuộc tính data-target

            // Xóa lớp 'active' khỏi tất cả các ảnh con
            $('.thumbnail-item').removeClass('active');

            // Thêm lớp 'active' vào ảnh con được click
            $(this).parent().addClass('active');

            // Cập nhật chỉ số currentIndex
            currentIndex = $(this).parent().index(); // Cập nhật currentIndex khi click vào thumbnail

            // Mờ ảnh lớn và cập nhật ảnh lớn
            $('#main-image').fadeOut(300, function () {
                $(this).attr('src', targetImage).fadeIn(300); // Cập nhật src và hiện lại ảnh
            });
        });
    });



</script>
