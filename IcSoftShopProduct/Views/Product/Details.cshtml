@model ProductDetailsViewModel
@{
    ViewData["Title"] = Model.Product.ProductName;
    var Product = Model.Product;
    double ProductSale = 0;
    double ProductDiscount = 0;
    if (Product.ProductSale > 0)
    {
        ProductSale = (double)(Product.ProductPrice - (Product.ProductPrice * Product.ProductSale) / 100);
        ProductDiscount = (double)((Product.ProductPrice * Product.ProductSale) / 100);
    }
    else
    {
        ProductSale = (double)Product.ProductPrice;
    }

}
<section class="shop-details">
    <div class="product__details__pic">
        <div class="breadcrumb-option">
        <div class="container">
            <div class="row">
                <div class="col-lg-12">
                    <div class="breadcrumb__text">
                        <div class="breadcrumb__links">
                            <a href="/">Trang chủ</a>
                            <a href="/shopall/1">Shop</a>
                            <span>@Model.Product.ProductName</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        </div>
           <div class="container">
            <div class="row">
                <div class="col-lg-1 col-md-2 col-12">
                    <div class="thumbnail-wrapper" style="position: relative;">
                        <ul class="nav nav-tabs" role="tablist" id="thumb-list">
                            @foreach (var item in Model.Product.ProductImage.Take(Model.Product.ProductImage.Count - 1))
                            {
                                <li class="nav-item thumbnail-item" style=" margin-bottom: 10px;">
                                    <a class="nav-link" data-toggle="tab" href="#tabs-1" role="tab" data-target="@item.ImageUrl">
                                        <div class="product__thumb__pic set-bg" data-setbg="@item.ImageUrl" style="background-image: url('@item.ImageUrl'); background-size: cover;">
                                        </div>
                                    </a>
                                </li>
                            }
                        </ul>
                    </div>
                </div>
                <div class="col-lg-5 col-md-10">
                    <div class="tab-content">
                        <div class="tab-pane active" id="tabs-1" role="tabpanel">
                            <div class="product__details__pic__item">
                                <!-- Thêm 2 nút điều hướng sang trái và phải -->
                                <button class="nav-btn prev-btn" id="prev-btn">&#10094;</button> <!-- Nút Previous -->
                                <img id="main-image" src="@Model.Product.ProductImage.First().ImageUrl" alt="" class="main-product-image">
                                <button class="nav-btn next-btn" id="next-btn">&#10095;</button> <!-- Nút Next -->
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-lg-6 col-md-12 col-12 ">
                    <div class="product__details__text">
                  
                        <h4>@Model.Product.ProductName</h4>
                         @if(Model.Product.ProductSale > 0)
                         {
                             <h2> @ProductSale.ToString("N0").Replace(",", ".")₫ 
                                 <span>@Model.Product.ProductPrice.ToString("N0").Replace(",", ".")₫ </span>
                                <strong class="sale-details-badge">-@Model.Product.ProductSale% </strong>
                                <p>(Tiết kiệm @ProductDiscount.ToString("N0").Replace(",", ".")₫) </p>

                            </h2>
 
                         }
                         else
                        {
                            <h2> @Model.Product.ProductPrice.ToString("N0").Replace(",", ".")₫ </h2>
                        }
                        <div class="product__details__option">
                            <div class="product__details__option__color" style="padding-bottom:20px">
                                <h3>Màu sắc:</h3>
                                @foreach (var item in Model.Product.ProductColors)
                                {
                                    <input type="radio" id="color-@item.Color.ColorId" name="color" value="@item.Color.ColorName"> <!-- Gán giá trị cho ô radio -->
                                    <label class="c-1" for="color-@item.Color.ColorId" style="background-color: @item.Color.ColorCode"></label>
                                }
                            </div>

                            <br />
                            <div class="product__details__option__size">
                                <h3>Kích cỡ:</h3>
                                @foreach(var item in Model.Product.ProductSizes)
                                {
                                    <label>
                                        @item.Size.SizeName
                                        <input type="radio" name="size" value="@item.Size.SizeName"> <!-- Gán giá trị cho ô radio -->
                                    </label>
                                }
                            </div>

                        </div>
                        <div class="product__details__cart__option">
                            <div class="product__image__full">
                                <img src=@Model.Product.ProductImage.Last().ImageUrl alt="Product Image" class="full-width-image">
                            </div>
                            <!-- Flex container cho quantity và Add to Cart -->
                            <div class="cart-action-row d-flex justify-content-between align-items-center">
                                <div class="custom input_number_product custom-btn-number">
                                    <!-- Nút giảm số lượng -->
                                    <button class="btn btn_num num_1 button button_qty" type="button" onclick="decreaseQty()">-</button>

                                    <!-- Ô nhập số lượng -->
                                    <input type="text" id="qtym" name="quantity" value="1" maxlength="3" class="form-control prd_quantity pd-qtym" onkeypress="return isNumber(event)" onchange="syncQuantity()">

                                    <!-- Nút tăng số lượng -->
                                    <button class="btn btn_num num_2 button button_qty" type="button" onclick="increaseQty()">+</button>
                                </div>

                                <a href="" class="add-to-cart-btn">Thêm vào giỏ</a>
                             
                            </div>
                      
                    </div>
                        <div class="product__details__description">
                            <a href="" class="check-out-btn">Mua ngay</a>
                            <div class="description">
                            <h4 class="toggle-description">
                                Mô tả sản phẩm
                                <span class="toggle-description-icon">&#9660;</span> <!-- Mũi tên chỉ lên ban đầu -->
                            </h4>
                            <hr>
                            <div id="descriptionContent" class="content">
                                <p>@Html.Raw(Model.Product.ProductDescription.Replace(".",".<br>"))</p>
                              
                            </div>
                        </div>
                            <div class="description-shipping">
                                <h4 class="toggle-shipping">
                                    Chính sách giao hàng
                                    <span class="toggle-shipping-icon">&#9660;</span> <!-- Mũi tên chỉ lên ban đầu -->
                                </h4>
                                <hr>
                                <div id="shippingContent" class="content">
                                    <p>Nội dung đang được cập nhật</p>
                                </div>
                            </div>
                            <div class="description-exchange">
                                <h4 class="toggle-exchange">
                                    Chính sách đổi trả
                                    <span class="toggle-exchange-icon">&#9660;</span> <!-- Mũi tên chỉ lên ban đầu -->
                                </h4>
                                <hr>
                                <div id="exchangeContent" class="content">
                                    <p>Nội dung đang được cập nhật</p>
                                </div>
                            </div>
                        </div>


                </div>
                </div>
               
            </div>
        </div>
    </div>
    <!-- Thông báo thêm vào giỏ hàng -->
    <div id="cart-notification-modal" class="cart-modal">
        <div class="cart-modal-content">
            <div class="cart-modal-header">
                <span class="cart-success-icon">✔</span>
                <p>Thêm vào giỏ hàng thành công</p>
                <span class="close-btn" style="cursor: pointer; float: right; font-size: 20px;">&times;</span>
            </div>
            <div class="cart-modal-body">
                <div class="cart-product-details">
                    <img src="@Model.Product.ProductImage.First().ImageUrl" alt="Product Image" class="cart-product-image">
                    <div class="cart-product-info">
                        <p class="product-name">@Model.Product.ProductName</p>
                        <p class="product-variant"></p>
                        <p class="cart-total">
                            <span>Giỏ hàng hiện có</span>
                            <span class="total-price"></span>
                            <span></span>
                        </p>
                    </div>
                </div>
              
            </div>
            <div class="cart-modal-footer">
                <a class="btn-checkout" asp-controller="CheckOut" asp-action="Index">Thanh toán</a>
                <a asp-controller ="Cart" asp-action="CartIndex" class="btn-view-cart">Xem giỏ hàng</a>
            </div>
        </div>
    </div>

    <!-- Bảng thông báo đăng nhập -->
    <div id="login-notification-modal" class="login-modal" style="display: none;">
        <div class="login-modal-content">
            <div class="login-modal-header">
                <span class="login-close-btn" style="cursor: pointer; float: right; font-size: 20px;">&times;</span>
            </div>
            <div class="login-modal-body">
                <p>Bạn cần đăng nhập để thực hiện chức năng này!</p>
                <a asp-area="Identity" asp-page="/Account/Login" class="btn-login">Đăng nhập</a>
            </div>
        </div>
    </div>


</section>

<section class="product spad">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <h2 style="font-size:30px;font-family:Montserrat;">
                    Sản phẩm cùng phân khúc
                </h2>
            </div>
        </div>
        <div class="row">
            <div class="product__slider">
                @foreach (var product in Model?.ProductsCollection.Take(5))
                {
                    if (product.ProductId != Model.Product.ProductId)
                    {
                        var HeaderImageUrl = product.ProductImage.FirstOrDefault()?.ImageUrl;

                        // Kiểm tra thời gian tạo sản phẩm
                        var timeDifference = DateTime.Now - product.CreatedDate;
                        var isNewArrival = timeDifference.Value.TotalDays <= 3; 
                        <div class="product__item">
                            <div class="product__item__pic" style="background-image:url('@HeaderImageUrl');">
                                <div class="overlay">
                                    <div class="product__info">
                                        <a asp-controller="Product" asp-action="Details" asp-route-name="@product.ProductName.Replace(" ","-").ToLower()">
                                            <h3 class="product__name">@product.ProductName</h3>
                                        </a>
                                        <p class="product__price">@product.ProductPrice.ToString("N0").Replace(",", ".") ₫</p>
                                    </div>
                                </div>
                                @if (isNewArrival)
                                {
                                    <div class="new-arrival-badge">New arrival</div>
                                }
                                
                                @if (product.ProductSale > 0)
                                {
                                    <div class="sale-badge">-@product.ProductSale%</div>
                                }
                            </div>
                        </div>
                    }
                }
            </div>
        </div>
    </div>
</section>

<section class="product spad">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <h2 style="font-size:30px;font-family:Montserrat;">
                    Sản phẩm cùng loại
                </h2>
            </div>
        </div>
        <div class="row">
            <div class="product__slider">
                @foreach (var product in Model?.ProductsCategory.Take(5))
                {
                    if (product.ProductId != Model.Product.ProductId)
                    {
                        var HeaderImageUrl = product.ProductImage.FirstOrDefault()?.ImageUrl;

                        // Kiểm tra thời gian tạo sản phẩm
                        var timeDifference = DateTime.Now - product.CreatedDate;
                        var isNewArrival = timeDifference.Value.TotalDays <= 3; 
                        <div class="product__item">
                            <div class="product__item__pic" style="background-image:url('@HeaderImageUrl');">
                                <div class="overlay">
                                    <div class="product__info">
                                        <a asp-controller="Product" asp-action="Details" asp-route-name="@product.ProductName.Replace(" ","-").ToLower()">
                                            <h3 class="product__name">@product.ProductName</h3>
                                        </a>
                                        <p class="product__price">@product.ProductPrice.ToString("N0").Replace(",", ".") ₫</p>
                                    </div>
                                </div>
                                @if (isNewArrival)
                                {
                                    <div class="new-arrival-badge">New arrival</div>
                                }
                                
                                @if (product.ProductSale > 0)
                                {
                                    <div class="sale-badge">-@product.ProductSale%</div>
                                }
                            </div>
                        </div>
                    }
                }
            </div>
        </div>
    </div>
</section>


<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="~/js//details.js"></script>
<script>
    $(document).ready(function () {
        let cartTotal = 0;


        $('.add-to-cart-btn').on('click', function (event) {
            event.preventDefault();

            // Lấy thông tin sản phẩm
            var productId = '@Model.Product.ProductId';
            var productName = '@Model.Product.ProductName';
            var productPrice = '0';
            var IsSale = '@Model.Product.ProductSale > 0';
            if (IsSale) {
                productPrice = parseFloat('@ProductSale');
            }
            else {
                productPrice = parseFloat('@Model.Product.ProductPrice');
            }

            var selectedColor = $('input[name="color"]:checked').val();
            var selectedSize = $('input[name="size"]:checked').val();
            var quantity = parseInt($('#qtym').val());
            var ProductImage = '@Model.Product.ProductImage.First().ImageUrl';

            if (!selectedColor || !selectedSize) {
                alert("Vui lòng chọn màu sắc và kích thước!");
                return; // Ngăn không cho thêm vào giỏ nếu chưa chọn
            }
            var isLoggedIn = @Html.Raw(User.Identity.IsAuthenticated.ToString().ToLower()); // Kiểm tra trạng thái đăng nhập

            if (!isLoggedIn) {
                showLoginNotification();
                return;
            }


            // Gửi dữ liệu qua AJAX
            $.ajax({
                url: '/Cart/AddToCart', // Đường dẫn đến action xử lý thêm vào giỏ hàng
                type: 'POST',
                data: {
                    productId: productId,
                    productName: productName,
                    color: selectedColor,
                    size: selectedSize,
                    quantity: quantity,
                    productPrice: productPrice,
                    ProductImageUrl: ProductImage
                },
                success: function (response) {


                    cartTotal += response.cartTotalPrice;

                    $('.cart-item-count').text(response.cartquantity);
                    // Cập nhật thông tin trong thông báo
                    $('.cart-product-info .product-name').text(productName);
                    $('.cart-product-info .product-variant').text(selectedColor + " / " + selectedSize);
                    $('.total-price').text(cartTotal.toLocaleString('en') + "₫" + "(Đang có" + " " + response.cartquantity + " " + "sản phẩm)"); // Cập nhật tổng giá

                    // Hiển thị thông báo giỏ hàng
                    showCartNotification();



                },
                error: function (xhr) {
                    console.error("Error:", xhr.responseText);


                    alert("Có lỗi xảy ra khi thêm sản phẩm vào giỏ hàng!");
                }
            });
        });

        function showLoginNotification() {
            document.getElementById('login-notification-modal').style.display = 'block';
        }


        document.querySelector('.login-close-btn').addEventListener('click', function () {
            document.getElementById('login-notification-modal').style.display = 'none';
        });


        window.onclick = function (event) {
            var modal = document.getElementById('login-notification-modal');
            if (event.target === modal) {
                modal.style.display = 'none';
            }
        };


        function showCartNotification() {
            $('#cart-notification-modal').fadeIn();
        }

    });



    $(document).ready(function () {

        $('.check-out-btn').on('click', function (event) {
            event.preventDefault();

            var productId = '@Model.Product.ProductId';
            var productName = '@Model.Product.ProductName';
            var productPrice = '0';
            var IsSale = '@Model.Product.ProductSale > 0';
            if (IsSale) {
                productPrice = parseFloat('@ProductSale');
            }
            else {
                productPrice = parseFloat('@Model.Product.ProductPrice');
            }

            var selectedColor = $('input[name="color"]:checked').val();
            var selectedSize = $('input[name="size"]:checked').val();
            var quantity = parseInt($('#qtym').val());
            var ProductImage = '@Model.Product.ProductImage.First().ImageUrl';

            if (!selectedColor || !selectedSize) {
                alert("Vui lòng chọn màu sắc và kích thước!");
                return; // Ngăn không cho thêm vào giỏ nếu chưa chọn
            }
            var isLoggedIn = @Html.Raw(User.Identity.IsAuthenticated.ToString().ToLower()); // Kiểm tra trạng thái đăng nhập

            if (!isLoggedIn) {
                showLoginNotification();
                return;
            }


            // Gửi dữ liệu qua AJAX
            $.ajax({
                url: '/CheckOut/CheckoutItem',
                type: 'POST',
                data: {
                    productId: productId,
                    productName: productName,
                    color: selectedColor,
                    size: selectedSize,
                    quantity: quantity,
                    productPrice: productPrice,
                    ProductImageUrl: ProductImage
                },
                success: function (response) {


                     window.location.href = response.redirectUrl;
                },
                error: function (xhr) {
                    console.error("Error:", xhr.responseText);


                    alert("Có lỗi xảy ra khi thêm sản phẩm vào giỏ hàng!");
                }
            });
        });

        function showLoginNotification() {
            document.getElementById('login-notification-modal').style.display = 'block';
        }


        document.querySelector('.login-close-btn').addEventListener('click', function () {
            document.getElementById('login-notification-modal').style.display = 'none';
        });


        window.onclick = function (event) {
            var modal = document.getElementById('login-notification-modal');
            if (event.target === modal) {
                modal.style.display = 'none';
            }
        };

    });
</script>
