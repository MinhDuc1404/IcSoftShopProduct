@model ProductDetailsViewModel
<section class="shop-details">
    <div class="product__details__pic">
        <div class="container">
            <div class="row">
                <div class="col-lg-12">
                    <div class="product__details__breadcrumb" style="text-align:left; background-color: #F6F6F6;">
                        <a href="./index.html">Home</a>
                        <a href="./shop.html">Shop</a>
                        <span>@Model.Product.ProductName</span>
                    </div>
                </div>
            </div>
           </div>
           <div class="container">
            <div class="row">
                <div class="col-lg-1 col-md-2">
                    <div class="thumbnail-wrapper" style="position: relative;">
                        <ul class="nav nav-tabs" role="tablist" id="thumb-list" style="overflow: hidden;max-height: 650px;">
                            @foreach (var item in Model.Product.ProductImage.Take(Model.Product.ProductImage.Count - 1))
                            {
                                <li class="nav-item thumbnail-item" style=" margin-bottom: 10px;">
                                    <a class="nav-link" data-toggle="tab" href="#tabs-1" role="tab" data-target="@item.ImageUrl">
                                        <div class="product__thumb__pic set-bg" data-setbg="@item.ImageUrl" style="background-image: url('@item.ImageUrl'); background-size: cover;">
                                        </div>
                                    </a>
                                </li>
                            }
                        </ul>
                    </div>
                </div>
                <div class="col-lg-5 col-md-10">
                    <div class="tab-content">
                        <div class="tab-pane active" id="tabs-1" role="tabpanel">
                            <div class="product__details__pic__item">
                                <!-- Thêm 2 nút điều hướng sang trái và phải -->
                                <button class="nav-btn prev-btn" id="prev-btn">&#10094;</button> <!-- Nút Previous -->
                                <img id="main-image" src="@Model.Product.ProductImage.First().ImageUrl" alt="" class="main-product-image">
                                <button class="nav-btn next-btn" id="next-btn">&#10095;</button> <!-- Nút Next -->
                            </div>
                        </div>
                    </div>
                </div>

          
                <div class="col-lg-6 col-md-12">
                    <div class="product__details__text">
                        <h4>@Model.Product.ProductName</h4>
                        <h2>@Model.Product.ProductPrice.ToString("N0").Replace(",", ".")₫ @* <span>70.00</span> *@</h2>

                        <div class="product__details__option">
                            <div class="product__details__option__color" style="padding-bottom:20px">
                                <h3>Màu sắc:</h3>
                                @foreach (var item in Model.Product.ProductColors)
                                {
                                    <input type="radio" id="color-@item.Color.ColorId" name="color" value="@item.Color.ColorName"> <!-- Gán giá trị cho ô radio -->
                                    <label class="c-1" for="color-@item.Color.ColorId" style="background-color: @item.Color.ColorCode"></label>
                                }
                            </div>

                            <br />
                            <div class="product__details__option__size">
                                <h3>Kích cỡ:</h3>
                                @foreach(var item in Model.Product.ProductSizes)
                                {
                                    <label>
                                        @item.Size.SizeName
                                        <input type="radio" name="size" value="@item.Size.SizeName"> <!-- Gán giá trị cho ô radio -->
                                    </label>
                                }
                            </div>

                        </div>
                        <div class="product__details__cart__option">
                            <div class="product__image__full">
                                <img src=@Model.Product.ProductImage.Last().ImageUrl alt="Product Image" class="full-width-image">
                            </div>
                            <!-- Flex container cho quantity và Add to Cart -->
                            <div class="cart-action-row d-flex justify-content-between align-items-center">
                                <div class="custom input_number_product custom-btn-number">
                                    <!-- Nút giảm số lượng -->
                                    <button class="btn btn_num num_1 button button_qty" type="button" onclick="decreaseQty()">-</button>

                                    <!-- Ô nhập số lượng -->
                                    <input type="text" id="qtym" name="quantity" value="1" maxlength="3" class="form-control prd_quantity pd-qtym" onkeypress="return isNumber(event)" onchange="syncQuantity()">

                                    <!-- Nút tăng số lượng -->
                                    <button class="btn btn_num num_2 button button_qty" type="button" onclick="increaseQty()">+</button>
                                </div>

                                <a href="" class="add-to-cart-btn">Thêm vào giỏ</a>
                            </div>
                      
                    </div>
                </div>
                </div>
               
            </div>
        </div>
    </div>
    <!-- Thông báo thêm vào giỏ hàng -->
    <div id="cart-notification-modal" class="cart-modal">
        <div class="cart-modal-content">
            <div class="cart-modal-header">
                <span class="cart-success-icon">✔</span>
                <p>Thêm vào giỏ hàng thành công</p>
                <span class="close-btn" style="cursor: pointer; float: right; font-size: 20px;">&times;</span>
            </div>
            <div class="cart-modal-body">
                <div class="cart-product-details">
                    <img src="@Model.Product.ProductImage.First().ImageUrl" alt="Product Image" class="cart-product-image">
                    <div class="cart-product-info">
                        <p class="product-name">@Model.Product.ProductName</p>
                        <p class="product-variant"></p>
                        <p class="cart-total">
                            <span>Giỏ hàng hiện có</span>
                            <span class="total-price"></span>
                            <span></span>
                        </p>
                    </div>
                </div>
              
            </div>
            <div class="cart-modal-footer">
                <button class="btn-checkout">Thanh toán</button>
                <a asp-controller ="Cart" asp-action="CartIndex" class="btn-view-cart">Xem giỏ hàng</a>
            </div>
        </div>
    </div>

    <!-- Bảng thông báo đăng nhập -->
    <div id="login-notification-modal" class="login-modal" style="display: none;">
        <div class="login-modal-content">
            <div class="login-modal-header">
                <span class="login-close-btn" style="cursor: pointer; float: right; font-size: 20px;">&times;</span>
            </div>
            <div class="login-modal-body">
                <p>Bạn cần đăng nhập để thực hiện chức năng này!</p>
                <a asp-area="Identity" asp-page="/Account/Login" class="btn-login">Đăng nhập</a>
            </div>
        </div>
    </div>


</section>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>

    $(document).ready(function() {
        $('.nav-link').on('click', function() {
            var targetImage = $(this).data('target'); // Lấy URL của ảnh từ thuộc tính data-target
            $('#main-image').fadeOut(300, function() { // Mờ ảnh lớn
                $(this).attr('src', targetImage).fadeIn(300); // Cập nhật src và hiện lại ảnh
            });
        });
    });
    // Hàm để giảm số lượng
    function decreaseQty() {
        var qtyInput = document.getElementById('qtym');
        var stickResult = document.getElementsByClassName('pd-qtym')[1];
        var qty = parseInt(qtyInput.value);

        if (!isNaN(qty) && qty > 1) {
            qtyInput.value = qty - 1;

        }
    }

    // Hàm để tăng số lượng
    function increaseQty() {
        var qtyInput = document.getElementById('qtym');
        var stickResult = document.getElementsByClassName('pd-qtym')[1];
        var qty = parseInt(qtyInput.value);

        if (!isNaN(qty)) {
            qtyInput.value = qty + 1;
  
        }
    }

    // Kiểm tra xem người dùng nhập có phải là số hay không
    function isNumber(evt) {
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if (charCode > 31 && (charCode < 48 || charCode > 57)) {
            return false; // Không cho phép nhập ký tự không phải số
        }
        return true;
    }

    // Đồng bộ số lượng khi người dùng thay đổi trực tiếp giá trị
    function syncQuantity() {
        var qtyInput = document.getElementById('qtym');
        var stickResult = document.getElementsByClassName('pd-qtym')[1];

        if (qtyInput.value == 0) {
            qtyInput.value = 1; // Đảm bảo số lượng không thấp hơn 1
        }
        stickResult.value = qtyInput.value;
    }


    // Khởi tạo chỉ số hiện tại
    let currentIndex = 0;  // Vị trí hiện tại của ảnh lớn
    let visibleThumbs = 5; // Số lượng ảnh con được hiển thị cùng lúc
    const thumbs = document.querySelectorAll('#thumb-list .thumbnail-item'); // Lấy tất cả ảnh con
    const totalThumbs = thumbs.length;

    document.addEventListener("DOMContentLoaded", function () {
        var mainImage = document.getElementById('main-image');

        // Hàm cập nhật ảnh lớn khi click vào thumbnail
        document.querySelectorAll('.nav-link').forEach(function (thumb, index) {
            thumb.addEventListener('click', function () {
                currentIndex = index;  // Cập nhật index hiện tại
                var targetImage = this.getAttribute('data-target');
                updateMainImage(targetImage);
                ensureVisible(currentIndex);  // Đảm bảo ảnh được hiển thị
                updateActiveThumbnail(currentIndex); // Cập nhật lớp active cho thumbnail
            });
        });

        // Nút Previous
        document.getElementById('prev-btn').addEventListener('click', function () {
            if (currentIndex > 0) {
                currentIndex--;  // Di chuyển về phía trước
                var targetImage = thumbs[currentIndex].querySelector('a').getAttribute('data-target');
                updateMainImage(targetImage);
                ensureVisible(currentIndex);  // Đảm bảo ảnh được hiển thị
                updateActiveThumbnail(currentIndex);
            }
        });

        // Nút Next
        document.getElementById('next-btn').addEventListener('click', function () {
            if (currentIndex < totalThumbs - 1) {
                currentIndex++;  // Di chuyển về phía sau
                var targetImage = thumbs[currentIndex].querySelector('a').getAttribute('data-target');
                updateMainImage(targetImage);
                ensureVisible(currentIndex);  // Đảm bảo ảnh được hiển thị
                updateActiveThumbnail(currentIndex);
            }
        });

        // Hàm để cập nhật ảnh lớn
        function updateMainImage(targetImage) {
            $(mainImage).fadeOut(300, function () {
                $(this).attr('src', targetImage).fadeIn(300);
            });
        }

        // Hàm để đảm bảo ảnh con hiện tại nằm trong vùng hiển thị
        function ensureVisible(index) {
            // Tính toán phạm vi ảnh con hiện tại
            let start = Math.max(0, index - Math.floor(visibleThumbs / 2));
            let end = Math.min(totalThumbs, start + visibleThumbs);

            // Đảm bảo tất cả các ảnh con nằm ngoài phạm vi này sẽ bị ẩn
            thumbs.forEach((thumb, i) => {
                if (i >= start && i < end) {
                    thumb.style.display = 'block';  // Hiển thị các ảnh trong phạm vi
                } else {
                    thumb.style.display = 'none';  // Ẩn các ảnh không nằm trong phạm vi
                }
            });
        }

        // Cập nhật lớp active cho thumbnail
        function updateActiveThumbnail(index) {
            $('.thumbnail-item').removeClass('active');
            $('.thumbnail-item').eq(index).addClass('active');
        }
    });
    document.querySelector('.add-to-cart-btn').addEventListener('click', function () {
        this.classList.add('active');
        setTimeout(() => {
            this.classList.remove('active');
        }, 200); // Thời gian delay 200ms
    });

    // Mã để điều chỉnh hiển thị khi click vào thumbnail đã được điều chỉnh trong sự kiện click
    $(document).ready(function () {
        $('.thumbnail-item').first().addClass('active');
        $('.nav-link').on('click', function () {
            var targetImage = $(this).data('target'); // Lấy URL của ảnh từ thuộc tính data-target

            // Xóa lớp 'active' khỏi tất cả các ảnh con
            $('.thumbnail-item').removeClass('active');

            // Thêm lớp 'active' vào ảnh con được click
            $(this).parent().addClass('active');

            // Cập nhật chỉ số currentIndex
            currentIndex = $(this).parent().index(); // Cập nhật currentIndex khi click vào thumbnail

            // Mờ ảnh lớn và cập nhật ảnh lớn
            $('#main-image').fadeOut(300, function () {
                $(this).attr('src', targetImage).fadeIn(300); // Cập nhật src và hiện lại ảnh
            });
        });
    });


    // Đóng bảng thông báo khi nhấn vào nút x
    document.querySelector('.close-btn').addEventListener('click', function () {
        document.getElementById('cart-notification-modal').style.display = 'none';
    });

    // Đóng bảng thông báo khi nhấn ra ngoài vùng thông báo
    window.onclick = function (event) {
        var modal = document.getElementById('cart-notification-modal');
        if (event.target == modal) {
            modal.style.display = 'none';
        }
    };
    $(document).ready(function () {
        let cartTotal = 0; // Tổng giá ban đầu của giỏ hàng

        $('.add-to-cart-btn').on('click', function (event) {
            event.preventDefault(); // Ngăn hành động mặc định của liên kết

            // Lấy thông tin sản phẩm
            var productId = '@Model.Product.ProductId';
            var productName = '@Model.Product.ProductName';
            var productPrice = parseFloat('@Model.Product.ProductPrice'); // Giá trị của sản phẩm (dạng số)
            var selectedColor = $('input[name="color"]:checked').val(); // Màu sắc đã chọn
            var selectedSize = $('input[name="size"]:checked').val(); // Kích thước đã chọn
            var quantity = parseInt($('#qtym').val()); // Số lượng sản phẩm đã chọn
            var ProductImage = '@Model.Product.ProductImage.First().ImageUrl';

            // Kiểm tra xem người dùng đã chọn màu sắc và kích thước chưa
            if (!selectedColor || !selectedSize) {
                alert("Vui lòng chọn màu sắc và kích thước!");
                return; // Ngăn không cho thêm vào giỏ nếu chưa chọn
            }
            var isLoggedIn = @Html.Raw(User.Identity.IsAuthenticated.ToString().ToLower()); // Kiểm tra trạng thái đăng nhập

            if (!isLoggedIn) {
                showLoginNotification();
                return;
            }
           

                // Gửi dữ liệu qua AJAX
                $.ajax({
                    url: '/Cart/AddToCart', // Đường dẫn đến action xử lý thêm vào giỏ hàng
                    type: 'POST',
                    data: {
                        productName: productName,
                        color: selectedColor,
                        size: selectedSize,
                        quantity: quantity,
                        productPrice: productPrice,
                        ProductImageUrl: ProductImage
                    },
                    success: function (response) {


                        // Cập nhật tổng giá giỏ hàng
                        cartTotal += response.cartTotalPrice; // Sử dụng tổng giá giỏ hàng từ phản hồi

                        // Cập nhật thông tin trong thông báo
                        $('.cart-product-info .product-name').text(productName);
                        $('.cart-product-info .product-variant').text(selectedColor + " / " + selectedSize);
                        $('.total-price').text(cartTotal.toLocaleString('en') + "₫"); // Cập nhật tổng giá

                        // Hiển thị thông báo giỏ hàng
                        showCartNotification();



                    },
                    error: function (xhr) {
                        console.error("Error:", xhr.responseText); // Ghi lại thông tin lỗi


                        alert("Có lỗi xảy ra khi thêm sản phẩm vào giỏ hàng!");
                    }
                });
            });
        // Hàm để hiển thị bảng thông báo đăng nhập
        function showLoginNotification() {
            document.getElementById('login-notification-modal').style.display = 'block';
        }

        // Đóng bảng thông báo khi nhấn vào nút x
        document.querySelector('.login-close-btn').addEventListener('click', function () {
            document.getElementById('login-notification-modal').style.display = 'none';
        });

        // Đóng bảng thông báo khi nhấn ra ngoài vùng thông báo
        window.onclick = function (event) {
            var modal = document.getElementById('login-notification-modal');
            if (event.target === modal) {
                modal.style.display = 'none';
            }
        };


        // Hàm hiển thị thông báo giỏ hàng
        function showCartNotification() {
            $('#cart-notification-modal').fadeIn();
        }
    
    });




</script>
